{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Meet the Topl Blockchain Transparent yet secure, scalable yet flexible, affordable and 10 million times more energy-efficient than early blockchains, the Topl Blockchain is the ultimate tool for maximizing the value of impact. Using the navigation menu on the left, we invite you to explore and learn about what makes Topl unique.","title":"Home"},{"location":"toc/","text":"Table of contents Introduction Motivation and Vision What is blockchain good for? Another Layer 1 Interoperability Glossary Tokenomics, Governance, and Ecosystem Arbits Community Inclusive Organization Services and dApp Development Fees, Currency, and Consensus Stablecoin and Transaction Fees Polys Weighted Transactions Taktikos PoS Core Architecture and Ledger Logic UTxO Ledger extended-UTxOs Ledger Logic Quivr DSL Smart Token Ontology DAML Layer Infrastructure and Tooling Ribn Brambl","title":"Contents"},{"location":"toc/#table-of-contents","text":"","title":"Table of contents"},{"location":"toc/#introduction","text":"Motivation and Vision What is blockchain good for? Another Layer 1 Interoperability Glossary","title":"Introduction"},{"location":"toc/#tokenomics-governance-and-ecosystem","text":"Arbits Community Inclusive Organization Services and dApp Development","title":"Tokenomics, Governance, and Ecosystem "},{"location":"toc/#fees-currency-and-consensus","text":"Stablecoin and Transaction Fees Polys Weighted Transactions Taktikos PoS","title":"Fees, Currency, and Consensus"},{"location":"toc/#core-architecture-and-ledger-logic","text":"UTxO Ledger extended-UTxOs Ledger Logic Quivr DSL Smart Token Ontology DAML Layer","title":"Core Architecture and Ledger Logic"},{"location":"toc/#infrastructure-and-tooling","text":"Ribn Brambl","title":"Infrastructure and Tooling"},{"location":"core-architecture-and-ledger-logic/extended-utxos/","text":"extended-UTxOs Blockchains like Ethereum pioneered the notion of running complex code or logic on blockchain ledgers. Such functionality, although greatly simplified, can be found even in Bitcoin. Bitcoin includes what are known as Bitcoin Scripts. Bitcoin Scripts comprise a Turing-incomplete (or limited-functionality) language that allows some forms of complex transactions, such as multi-sig transfers. Within the framework of a UTxO blockchain, the idea behind Bitcoin Scripts can be generalized with something known as extended-UTxOs . Extended-UTxOs represent a more granular implementation of a general-purpose blockchain state machine. In a blockchain that supports extended-UTxOs, users create complex locks, also called propositions, on a transaction output (like a box of tokens) that must be satisfied before this transaction output can be used as the input for a new transaction. For example, imagine that Alice wishes to send Bob some tokens that can only be spent when the oracle, Olivia, confirms it's raining. Alice can send her tokens to Bob, locking the output box with a proposition that can only be satisfied with a combination of (1) Bob's private key and (2) a signed message from Olivia stating that it was raining within the last k blocks. We can take this example further if we imagine that Alice wishes to create a new variety of token that can only be spent when it's raining. To achieve this, Alice will send her tokens to Bob, this time locking the output box with a 3-fold proposition. The lock can satisfied by only the combination of (1) Bob's private key, (2) a signed message from Olivia stating that it was raining within the last k blocks, and (3) a new output box locked with propositions identical to parts 2 and 3 of the original proposition. Using the above notion of a self-replicating lock, extended-UTxOs can even be used to execute multi-step, smart-contract-style logic with each step being executed per lock. While there are undoubtedly drawbacks to extended-UTxOs compared with traditional smart contracts, Topl is implementing such functionality as a complement to Layer 2 DAML contracts in order to provide our users with greater flexibility and choice in how to execute ledger logic on the Topl Blockchain. One benefit in particular granted is that extended-UTxOs can always be fully verified by a user locally with essentially no more resources or connectivity than are required to execute a simple token transfer. While there are drawbacks to extended-UTxOs compared with traditional smart contracts, Topl is implementing exetended-UTxOs as a complement to Chain Program Engine to provide users with greater flexibility and choice in how to execute ledger logic on the Topl Blockchain. One benefit is that extended-UTxOs can always be fully verified by a user locally with essentially no more resources or connectivity than required to execute a simple token transfer.","title":"Extended UTxOs"},{"location":"core-architecture-and-ledger-logic/extended-utxos/#extended-utxos","text":"Blockchains like Ethereum pioneered the notion of running complex code or logic on blockchain ledgers. Such functionality, although greatly simplified, can be found even in Bitcoin. Bitcoin includes what are known as Bitcoin Scripts. Bitcoin Scripts comprise a Turing-incomplete (or limited-functionality) language that allows some forms of complex transactions, such as multi-sig transfers. Within the framework of a UTxO blockchain, the idea behind Bitcoin Scripts can be generalized with something known as extended-UTxOs . Extended-UTxOs represent a more granular implementation of a general-purpose blockchain state machine. In a blockchain that supports extended-UTxOs, users create complex locks, also called propositions, on a transaction output (like a box of tokens) that must be satisfied before this transaction output can be used as the input for a new transaction. For example, imagine that Alice wishes to send Bob some tokens that can only be spent when the oracle, Olivia, confirms it's raining. Alice can send her tokens to Bob, locking the output box with a proposition that can only be satisfied with a combination of (1) Bob's private key and (2) a signed message from Olivia stating that it was raining within the last k blocks. We can take this example further if we imagine that Alice wishes to create a new variety of token that can only be spent when it's raining. To achieve this, Alice will send her tokens to Bob, this time locking the output box with a 3-fold proposition. The lock can satisfied by only the combination of (1) Bob's private key, (2) a signed message from Olivia stating that it was raining within the last k blocks, and (3) a new output box locked with propositions identical to parts 2 and 3 of the original proposition. Using the above notion of a self-replicating lock, extended-UTxOs can even be used to execute multi-step, smart-contract-style logic with each step being executed per lock. While there are undoubtedly drawbacks to extended-UTxOs compared with traditional smart contracts, Topl is implementing such functionality as a complement to Layer 2 DAML contracts in order to provide our users with greater flexibility and choice in how to execute ledger logic on the Topl Blockchain. One benefit in particular granted is that extended-UTxOs can always be fully verified by a user locally with essentially no more resources or connectivity than are required to execute a simple token transfer. While there are drawbacks to extended-UTxOs compared with traditional smart contracts, Topl is implementing exetended-UTxOs as a complement to Chain Program Engine to provide users with greater flexibility and choice in how to execute ledger logic on the Topl Blockchain. One benefit is that extended-UTxOs can always be fully verified by a user locally with essentially no more resources or connectivity than required to execute a simple token transfer.","title":"extended-UTxOs"},{"location":"core-architecture-and-ledger-logic/utxo-ledger/","text":"UTxO Ledger An early decision in the development of a blockchain network is to choose the ledger model. How the evolution of state is tracked from block to block has deep implications on a blockchain's overall design and functionality. With the benefit of a combined 10 years of blockchain experience at inception, Topl opted to adopt a UTxO ledger model instead of an account-based model, resulting in greater scalability and traceability for the Topl Blockchain. Scalability The scalability benefit of UTxO ledgers comes from that the common method of achieving layer 1 blockchain scalability, sharding, is easier and more natural to implement atop a UTxO ledger. With sharding, the major challenge is determining how to form shards. How do we group users or contracts onto one shard compared to another? The answer is critical. Realizing scaling benefits through sharding assumes that intra-shard communication and state updating is roughly 20x or more higher than inter-shard communication. With UTxO ledgers, the lines for sharding can be drawn intelligently and even dynamically as the blockchain's state is simply the expression of all UTxO boxes or encapsulations, with each new UTxO linking explicitly to the segments of state on which it builds. In contrast, account-based ledgers rely on monolithic state tries that have no natural points of fracture, thus increasing the demand for inter-shard communication and substantially limiting the scalability improvements offered. With UTxO ledgers, the lines for sharding can be drawn intelligently and even dynamically, as the blockchain's state is simply the expression of all UTxO boxes or encapsulations, with each new UTxO linking explicitly to the segments of state on which it builds. In contrast, account-based ledgers rely on monolithic state tries that have no natural points of fracture, thus increasing the demand for inter-shard communication and substantially limiting scalability improvements. Traceability Perhaps simplest to discuss among the advantages of a UTxO ledger is the idea of improved traceability. Consider the analogy of cash versus bank balances. When cash is transferred, it is possible to trace exact bills through a chain of transactions regardless of how long. The bills themselves remain economically fungible, but nevertheless they can gather history. This is the exact model of a UTxO ledger with an important exception. Because blockchains are digital and persistent, the ability to trace a singular asset such as a carbon credit or diamond changing hands countless times is practical (and already happening on the Topl Blockchain) instead of theoretical. On the other hand, account-based ledgers track assets like banks do. If two transactions affect a single balance at the same time (in the same block) traceability is broken. It is not longer possible to match the specific inputs to the balance uniquely to the new outputs.","title":"Unspent Transaction Outputs"},{"location":"core-architecture-and-ledger-logic/utxo-ledger/#utxo-ledger","text":"An early decision in the development of a blockchain network is to choose the ledger model. How the evolution of state is tracked from block to block has deep implications on a blockchain's overall design and functionality. With the benefit of a combined 10 years of blockchain experience at inception, Topl opted to adopt a UTxO ledger model instead of an account-based model, resulting in greater scalability and traceability for the Topl Blockchain.","title":"UTxO Ledger"},{"location":"core-architecture-and-ledger-logic/utxo-ledger/#scalability","text":"The scalability benefit of UTxO ledgers comes from that the common method of achieving layer 1 blockchain scalability, sharding, is easier and more natural to implement atop a UTxO ledger. With sharding, the major challenge is determining how to form shards. How do we group users or contracts onto one shard compared to another? The answer is critical. Realizing scaling benefits through sharding assumes that intra-shard communication and state updating is roughly 20x or more higher than inter-shard communication. With UTxO ledgers, the lines for sharding can be drawn intelligently and even dynamically as the blockchain's state is simply the expression of all UTxO boxes or encapsulations, with each new UTxO linking explicitly to the segments of state on which it builds. In contrast, account-based ledgers rely on monolithic state tries that have no natural points of fracture, thus increasing the demand for inter-shard communication and substantially limiting the scalability improvements offered. With UTxO ledgers, the lines for sharding can be drawn intelligently and even dynamically, as the blockchain's state is simply the expression of all UTxO boxes or encapsulations, with each new UTxO linking explicitly to the segments of state on which it builds. In contrast, account-based ledgers rely on monolithic state tries that have no natural points of fracture, thus increasing the demand for inter-shard communication and substantially limiting scalability improvements.","title":"Scalability"},{"location":"core-architecture-and-ledger-logic/utxo-ledger/#traceability","text":"Perhaps simplest to discuss among the advantages of a UTxO ledger is the idea of improved traceability. Consider the analogy of cash versus bank balances. When cash is transferred, it is possible to trace exact bills through a chain of transactions regardless of how long. The bills themselves remain economically fungible, but nevertheless they can gather history. This is the exact model of a UTxO ledger with an important exception. Because blockchains are digital and persistent, the ability to trace a singular asset such as a carbon credit or diamond changing hands countless times is practical (and already happening on the Topl Blockchain) instead of theoretical. On the other hand, account-based ledgers track assets like banks do. If two transactions affect a single balance at the same time (in the same block) traceability is broken. It is not longer possible to match the specific inputs to the balance uniquely to the new outputs.","title":"Traceability"},{"location":"core-architecture-and-ledger-logic/ledger-logic/chain-program-engine/","text":"DAML Layer In order to provide even greater flexibility and use-case coverage than offered by the Quivr DSL , the Topl protocol supports a Layer 2 smart contract solution using the Turing-complete Digital Asset Modeling Language (DAML). Developed by Digital Asset , this open-source smart contract language is based on Haskell and as such is a typed, functional language. This design decision makes DAML extremely well suited to encouraging safer and more predictable development patterns, as well as improved code audits and analysis . In 2014, the crypto space shifted from a focus on UTxO-ledger blockchains, such as Bitcoin, to account-ledger blockchains, such as Ethereum. This transition was driven in large part by the development of the Ethereum Virtual Machine (EVM) and by the model of smart contract execution chosen by the Ethereum team. Thankfully, considering the benefits of a UTxO ledger model over an account model for scalability and traceability, the model popularized by Ethereum is not the sole model for the complex ledger logic atop a blockchain. As we discuss ( here ), extended-UTxOs currently being implemented into the Topl Blockchain represent another such model. The key limit of extended-UTxOs lies in the fact that multi-step computations must be carried out across multiple blocks. To offer a second method for ledger logic on the Topl Blockchain, a Chain Program Engine is currently under development to provide greater flexibility to Topl's users. Thankfully, considering the benefits of a UTxO ledger model over an account model for scalability and traceability, the model popularized by Ethereum is not the sole model for the complex ledger logic atop a blockchain. As we discuss ( here ), extended-UTxOs currently being implemented into the Topl Blockchain represent another such model. The key limit of extended-UTxOs lies in the fact that multi-step computations must be carried out across multiple blocks. To offer a second method for ledger logic on the Topl Blockchain, a Chain Program Engine will provide greater flexibility to Topl's users. While DAML has found strong adoption in private enterprise deployments, it has not as of yet been integrated with any major public chains, despite numerous improvements over Solidity and other smart contract languages. Topl's Chain Program Engine differs from Ethereum style smart contracts in a few key ways: Topl's Chain Program Engine differs from Ethereum-style smart contracts in a few key ways: Given that DAML smart contracts in fact combine logical execution with a virtual (UTxO) ledger model, it is an ideal tool for a Layer 2 smart contract platform. Through Topl's DAML integration, users can achieve the following: In order to affect state (carry out a transaction), a chain program must always be provided a signature, whether a simple signature or proxy signature, to execute. As many security vulnerabilities exploited in Ethereum smart contracts stem from these contracts being able to execute \"autonomously\", the requirement for a signature may considerably reduce the likelihood of such exploits. In line with the rest of Topl's ledger, chain programs function within the framework of UTxOs with special boxes, called code boxes, state boxes, and execution boxes employed. Not only does this approach enable users to more easily (with fewer resources) verify chain programs than smart contracts, but it also substantially reduces the so-called miner-extractable value (MEV). In order to affect state (carry out a transaction), a chain program must always be provided a signature, whether a simple signature or proxy signature, to execute. As many security vulnerabilities in Ethereum smart contracts stem from these contracts being able to execute \"autonomously,\" the requirement for a signature may considerably reduce the likelihood of such exploits. In line with Topl's ledger, chain programs function within the framework of UTxOs, with special boxes, called code boxes, state boxes, and execution boxes employed. Not only does this approach enable users to more easily (with fewer resources) verify chain programs than smart contracts, but it substantially reduces the so-called miner-extractable value (MEV). Write and deploy Turing-complete contracts without the substantial gas fees found in EVM-style protocols; Achieve privacy domain separation between the public (Layer 1) Topl Blockchain and private (Layer 2) DAML contracts; Support bi-directional conditionality with DAML smart contracts capable of being triggered by on-chain transactions and vice versa. Finally, in addition to the above benefits, the separation of its Turing-complete smart contract layer into a separated domain enables the Topl blockchain to achieve greater levels of scalability.","title":"DAML Smart Contracts"},{"location":"core-architecture-and-ledger-logic/ledger-logic/chain-program-engine/#daml-layer","text":"In order to provide even greater flexibility and use-case coverage than offered by the Quivr DSL , the Topl protocol supports a Layer 2 smart contract solution using the Turing-complete Digital Asset Modeling Language (DAML). Developed by Digital Asset , this open-source smart contract language is based on Haskell and as such is a typed, functional language. This design decision makes DAML extremely well suited to encouraging safer and more predictable development patterns, as well as improved code audits and analysis . In 2014, the crypto space shifted from a focus on UTxO-ledger blockchains, such as Bitcoin, to account-ledger blockchains, such as Ethereum. This transition was driven in large part by the development of the Ethereum Virtual Machine (EVM) and by the model of smart contract execution chosen by the Ethereum team. Thankfully, considering the benefits of a UTxO ledger model over an account model for scalability and traceability, the model popularized by Ethereum is not the sole model for the complex ledger logic atop a blockchain. As we discuss ( here ), extended-UTxOs currently being implemented into the Topl Blockchain represent another such model. The key limit of extended-UTxOs lies in the fact that multi-step computations must be carried out across multiple blocks. To offer a second method for ledger logic on the Topl Blockchain, a Chain Program Engine is currently under development to provide greater flexibility to Topl's users. Thankfully, considering the benefits of a UTxO ledger model over an account model for scalability and traceability, the model popularized by Ethereum is not the sole model for the complex ledger logic atop a blockchain. As we discuss ( here ), extended-UTxOs currently being implemented into the Topl Blockchain represent another such model. The key limit of extended-UTxOs lies in the fact that multi-step computations must be carried out across multiple blocks. To offer a second method for ledger logic on the Topl Blockchain, a Chain Program Engine will provide greater flexibility to Topl's users. While DAML has found strong adoption in private enterprise deployments, it has not as of yet been integrated with any major public chains, despite numerous improvements over Solidity and other smart contract languages. Topl's Chain Program Engine differs from Ethereum style smart contracts in a few key ways: Topl's Chain Program Engine differs from Ethereum-style smart contracts in a few key ways: Given that DAML smart contracts in fact combine logical execution with a virtual (UTxO) ledger model, it is an ideal tool for a Layer 2 smart contract platform. Through Topl's DAML integration, users can achieve the following: In order to affect state (carry out a transaction), a chain program must always be provided a signature, whether a simple signature or proxy signature, to execute. As many security vulnerabilities exploited in Ethereum smart contracts stem from these contracts being able to execute \"autonomously\", the requirement for a signature may considerably reduce the likelihood of such exploits. In line with the rest of Topl's ledger, chain programs function within the framework of UTxOs with special boxes, called code boxes, state boxes, and execution boxes employed. Not only does this approach enable users to more easily (with fewer resources) verify chain programs than smart contracts, but it also substantially reduces the so-called miner-extractable value (MEV). In order to affect state (carry out a transaction), a chain program must always be provided a signature, whether a simple signature or proxy signature, to execute. As many security vulnerabilities in Ethereum smart contracts stem from these contracts being able to execute \"autonomously,\" the requirement for a signature may considerably reduce the likelihood of such exploits. In line with Topl's ledger, chain programs function within the framework of UTxOs, with special boxes, called code boxes, state boxes, and execution boxes employed. Not only does this approach enable users to more easily (with fewer resources) verify chain programs than smart contracts, but it substantially reduces the so-called miner-extractable value (MEV). Write and deploy Turing-complete contracts without the substantial gas fees found in EVM-style protocols; Achieve privacy domain separation between the public (Layer 1) Topl Blockchain and private (Layer 2) DAML contracts; Support bi-directional conditionality with DAML smart contracts capable of being triggered by on-chain transactions and vice versa. Finally, in addition to the above benefits, the separation of its Turing-complete smart contract layer into a separated domain enables the Topl blockchain to achieve greater levels of scalability.","title":"DAML Layer"},{"location":"core-architecture-and-ledger-logic/ledger-logic/dual-layer/","text":"Ledger Logic In order to extend the functionality of the blockchain protocol, Topl has conceived a dual layer ledger logic system consisting of a highly optimized on-chain DSL along with support for off-chain Turing complete smart contracts. Topl's on-chain DSL, known as Quivr , is intended to complement Topl's tokenization-first design and is built using extended-UTxO functionality. This tightly optimized DSL, made up of roughly a dozen composable functions can cover the vast majority of use cases without the need for fully generalized (and more complex) smart contracts. For the ~20% of use-cases where Quivr proves to be too limiting, the second half of Topl's ledger logic system comes into play. Topl has elected to integrate the fully Turing-complete Digital Asset Modeling Language (DAML) into its protocol.","title":"Dual-Layer Design"},{"location":"core-architecture-and-ledger-logic/ledger-logic/dual-layer/#ledger-logic","text":"In order to extend the functionality of the blockchain protocol, Topl has conceived a dual layer ledger logic system consisting of a highly optimized on-chain DSL along with support for off-chain Turing complete smart contracts. Topl's on-chain DSL, known as Quivr , is intended to complement Topl's tokenization-first design and is built using extended-UTxO functionality. This tightly optimized DSL, made up of roughly a dozen composable functions can cover the vast majority of use cases without the need for fully generalized (and more complex) smart contracts. For the ~20% of use-cases where Quivr proves to be too limiting, the second half of Topl's ledger logic system comes into play. Topl has elected to integrate the fully Turing-complete Digital Asset Modeling Language (DAML) into its protocol.","title":"Ledger Logic"},{"location":"core-architecture-and-ledger-logic/ledger-logic/smart-tokens/","text":"Quivr DSL Within 2 years of the launch of Bitcoin, developers and users have sought to extend the basic functionality offered by the Bitcoin blockchain. These efforts reached their first peak with the launch of the Ethereum blockchain in 2015 and have continued ever since, with a wide array of efforts to bring more computing power and flexibility to blockchain networks. Despite this, the most exciting use cases for blockchain logic remain centered around the movement and transacting of assets. Given the unique ability of blockchain's to disintermediate the trust required for parties to interact economically, this makes sense. Within 2 years of Bitcoin's launch, developers and users were already seeking to extend the basic functionality offered by the Bitcoin blockchain. These efforts reached their first peak with the launch of Ethereum in 2015, and a wide array of efforts to bring more computing power and flexibility to blockchain networks has continued ever since. More information coming soon Despite the expansion, the most exciting use cases for blockchain logic remain centered around the movement and transacting of assets. Given the ability of blockchain's to disintermediate the trust required for parties to interact economically, this makes sense. To complement blockchain's natural fit with asset focused use cases, Topl has endeavored to tightly and efficiently couple advanced functionality with tokenized-assets themselves on our blockchain. To do this we employ a smart token framework which combines user-defined, protocol-level assets and ledger logic functionality expressed through both extended-UTxOs and chain programs . To complement blockchain's natural fit with asset-focused use cases, the Topl Blockchain couples advanced functionality with tokenized assets. To do this, we employ a smart token framework combining user-defined, protocol-level assets and ledger logic functionality expressed through both extended-UTxOs and chain programs . To unpack this, let's first introduce what is meant by user-defined, protocol-level assets. Unlike with many other blockchains, a user can classify and mint their own arbitrary assets on chain without the use of any additional code beyond the protocol itself. By not having to rely on abstractions to simply create and mint new assets, Topl makes user-defined assets \"first-class citizens\" on our blockchain. To unpack this, let's introduce user-defined, protocol-level assets. Unlike many other blockchains, the Topl Blockchain lets a user classify and mint their own arbitrary assets on chain without the use of any additional code beyond the protocol itself. By not relying on abstractions to simply create and mint new assets, the Topl Blockchain makes user-defined assets \"first-class citizens.\" Beyond simply minting and transferring more complex controls and properties such as those found in Topl's token ontology will be achieved through a combination of extended-UTxOs (simply understood as complex locks or propositions that must be satisfied) and a special form of chain program known as a coordination program. In particular, coordination programs will be used to store asset properties either in plain text or as fingerprints of data stored off-chain. Beyond minting and transferring, more complex controls and properties such as those found in Topl's token ontology will be achieved through extended-UTxOs (complex locks or propositions that must be satisfied) and a special form of chain program known as a coordination program. In particular, coordination programs will be used to store asset properties either in plain text or as fingerprints of data stored off-chain.","title":"Quivr Language"},{"location":"core-architecture-and-ledger-logic/ledger-logic/smart-tokens/#quivr-dsl","text":"Within 2 years of the launch of Bitcoin, developers and users have sought to extend the basic functionality offered by the Bitcoin blockchain. These efforts reached their first peak with the launch of the Ethereum blockchain in 2015 and have continued ever since, with a wide array of efforts to bring more computing power and flexibility to blockchain networks. Despite this, the most exciting use cases for blockchain logic remain centered around the movement and transacting of assets. Given the unique ability of blockchain's to disintermediate the trust required for parties to interact economically, this makes sense. Within 2 years of Bitcoin's launch, developers and users were already seeking to extend the basic functionality offered by the Bitcoin blockchain. These efforts reached their first peak with the launch of Ethereum in 2015, and a wide array of efforts to bring more computing power and flexibility to blockchain networks has continued ever since. More information coming soon Despite the expansion, the most exciting use cases for blockchain logic remain centered around the movement and transacting of assets. Given the ability of blockchain's to disintermediate the trust required for parties to interact economically, this makes sense. To complement blockchain's natural fit with asset focused use cases, Topl has endeavored to tightly and efficiently couple advanced functionality with tokenized-assets themselves on our blockchain. To do this we employ a smart token framework which combines user-defined, protocol-level assets and ledger logic functionality expressed through both extended-UTxOs and chain programs . To complement blockchain's natural fit with asset-focused use cases, the Topl Blockchain couples advanced functionality with tokenized assets. To do this, we employ a smart token framework combining user-defined, protocol-level assets and ledger logic functionality expressed through both extended-UTxOs and chain programs . To unpack this, let's first introduce what is meant by user-defined, protocol-level assets. Unlike with many other blockchains, a user can classify and mint their own arbitrary assets on chain without the use of any additional code beyond the protocol itself. By not having to rely on abstractions to simply create and mint new assets, Topl makes user-defined assets \"first-class citizens\" on our blockchain. To unpack this, let's introduce user-defined, protocol-level assets. Unlike many other blockchains, the Topl Blockchain lets a user classify and mint their own arbitrary assets on chain without the use of any additional code beyond the protocol itself. By not relying on abstractions to simply create and mint new assets, the Topl Blockchain makes user-defined assets \"first-class citizens.\" Beyond simply minting and transferring more complex controls and properties such as those found in Topl's token ontology will be achieved through a combination of extended-UTxOs (simply understood as complex locks or propositions that must be satisfied) and a special form of chain program known as a coordination program. In particular, coordination programs will be used to store asset properties either in plain text or as fingerprints of data stored off-chain. Beyond minting and transferring, more complex controls and properties such as those found in Topl's token ontology will be achieved through extended-UTxOs (complex locks or propositions that must be satisfied) and a special form of chain program known as a coordination program. In particular, coordination programs will be used to store asset properties either in plain text or as fingerprints of data stored off-chain.","title":"Quivr DSL"},{"location":"core-architecture-and-ledger-logic/ledger-logic/token-ontology/","text":"Smart Token Ontology Tokenizing \"real world\" assets is a key use case of any blockchain. Among the most common manner one hears blockchain being applied is to create and track digital twins of X. This idea has become so common around blockchain that it has begun to obscure the hidden complexities in accomplishing this task effectively. While it may seem almost trivial (or at least as trivial as any task involving a barely 10 year old technology can be) to just digitize an asset, there are a myriad of hidden assumptions that users and businesses inevitably have regarding how should behave. We expect some things to be divisible and interchangeable while others ought to be fixed and unique, or we assume that there exist some items that can be separated and recombined while there are others whose entropy is irreversible. Tokenizing \"real world\" assets is a key blockchain use case. Blockchain is often applied to create and track digital twins of X. This idea has become so common that it has begun to obscure the hidden complexities in accomplishing this task effectively. Tokenizing \"real world\" assets is a key use case of any blockchain. Among the most common manner one hears blockchain being applied is to create and track digital twins of X. This idea has become so common around blockchain that it has begun to obscure the hidden complexities in accomplishing this task effectively. While digitizing an asset may seem almost trivial, there are a myriad of hidden assumptions that users and businesses inevitably have regarding how a digital asset should behave. We expect some to be divisible and interchangeable while others to be fixed and unique, or we assume some can be separated and recombined while others have irreversible entropy. To address these complexities, Topl has gone beyond the simplistic dichotomy of fungible and non-fungible tokens represented by the ERC20 versus ERC721 created by Ethereum and adopted by numerous other chains. Instead, Topl has developed a rigorous ontology for tokens created on the Topl Blockchain. We believe such a strong foundation is necessary in order to accurately capture the universe of \"real world\" assets that can be tokenized and build a robust set token-centered functionality without introducing confusion and difficulty to developers and users. To address these complexities, Topl has gone beyond the simplistic dichotomy of fungible and non-fungible tokens represented by the ERC20 versus ERC721 created by Ethereum and adopted by numerous other chains. Instead, Topl has developed a rigorous ontology for tokens created on the Topl Blockchain. We believe such a strong foundation is necessary to capture the universe of \"real world\" assets that can be tokenized and to build a robust, set, token-centered functionality without introducing confusion and difficulty to developers and users. For this reason, Topl has endeavored to tightly and efficiently couple advanced functionality with tokenized-assets themselves in the core design of our blockchain. We employ a smart token ontology framework which combines user-defined, protocol-level assets and our Quivr DSL . Unpacking this, let's first introduce what is meant by user-defined, protocol-level assets. Unlike with many other blockchains, a user can classify and mint their own arbitrary assets on chain without the use of any additional code beyond the protocol itself. By not having to rely on abstractions to simply create and mint new assets, Topl makes user-defined assets \"first-class citizens\" on our blockchain. While it may seem almost trivial (or at least as trivial as any task involving a barely 10 year old technology can be) to just digitize an asset, there are a myriad of hidden assumptions that users and businesses inevitably have regarding how should behave. We expect some things to be divisible and interchangeable while others ought to be fixed and unique, or we assume that there exist some items that can be separated and recombined while there are others whose entropy is irreversible. To address these complexities, Topl has gone beyond the simplistic dichotomy of fungible and non-fungible tokens represented by the ERC20 versus ERC721 created by Ethereum and adopted by numerous other chains. Instead, Topl has developed a rigorous ontology for tokens created on the Topl Blockchain. We believe such a strong foundation is necessary in order to accurately capture the universe of \"real world\" assets that can be tokenized and build a robust set token-centered functionality without introducing confusion and difficulty to developers and users. Within Topl's token ontology, an asset is categorized through five questions: What is the atomicity of the asset? Or what is the base unit that we use to count instances of the asset? Is the asset fungible ? Can any two units be interchanged with each other without any effect? Is the asset unique ? Can only one instance of the asset exist? Is the asset divisible ? Can the asset be separated into multiple parts without becoming something different? Are such divisions reversible ? When the asset is divided can it be recombined without any additional work? Seeing as four of these questions are binary (yes/no), we might expect our ontology to produce 16 distinct categories. However, 10 of these potential categorizations are not logically possible. For example, if an asset is fungible, it cannot also be unique; if an asset is not divisible, such divisions obviously cannot be reversible (since they're already impossible). Ruling out these impossibilities, we have six distinct categories of tokens in our ontology, as pictured below. These six asset categories are capable of capturing the fundamental behavior of tangible assets ranging from coffee (fungible, reversibly divisible) to diamonds (non-fungible, non-reversibly divisible), as well as intangible assets ranging from commodity futures (fungible, non-divisible) to loan agreements (non-fungible, non-divisible). Topl's token ontology forms the basis for future token functionality as we will see when discussing Smart Tokens and Impact Credits. Topl's token ontology forms the basis for future token functionality, as we will see when discussing Smart Tokens and Impact Credits.","title":"Token Creation"},{"location":"core-architecture-and-ledger-logic/ledger-logic/token-ontology/#smart-token-ontology","text":"Tokenizing \"real world\" assets is a key use case of any blockchain. Among the most common manner one hears blockchain being applied is to create and track digital twins of X. This idea has become so common around blockchain that it has begun to obscure the hidden complexities in accomplishing this task effectively. While it may seem almost trivial (or at least as trivial as any task involving a barely 10 year old technology can be) to just digitize an asset, there are a myriad of hidden assumptions that users and businesses inevitably have regarding how should behave. We expect some things to be divisible and interchangeable while others ought to be fixed and unique, or we assume that there exist some items that can be separated and recombined while there are others whose entropy is irreversible. Tokenizing \"real world\" assets is a key blockchain use case. Blockchain is often applied to create and track digital twins of X. This idea has become so common that it has begun to obscure the hidden complexities in accomplishing this task effectively. Tokenizing \"real world\" assets is a key use case of any blockchain. Among the most common manner one hears blockchain being applied is to create and track digital twins of X. This idea has become so common around blockchain that it has begun to obscure the hidden complexities in accomplishing this task effectively. While digitizing an asset may seem almost trivial, there are a myriad of hidden assumptions that users and businesses inevitably have regarding how a digital asset should behave. We expect some to be divisible and interchangeable while others to be fixed and unique, or we assume some can be separated and recombined while others have irreversible entropy. To address these complexities, Topl has gone beyond the simplistic dichotomy of fungible and non-fungible tokens represented by the ERC20 versus ERC721 created by Ethereum and adopted by numerous other chains. Instead, Topl has developed a rigorous ontology for tokens created on the Topl Blockchain. We believe such a strong foundation is necessary in order to accurately capture the universe of \"real world\" assets that can be tokenized and build a robust set token-centered functionality without introducing confusion and difficulty to developers and users. To address these complexities, Topl has gone beyond the simplistic dichotomy of fungible and non-fungible tokens represented by the ERC20 versus ERC721 created by Ethereum and adopted by numerous other chains. Instead, Topl has developed a rigorous ontology for tokens created on the Topl Blockchain. We believe such a strong foundation is necessary to capture the universe of \"real world\" assets that can be tokenized and to build a robust, set, token-centered functionality without introducing confusion and difficulty to developers and users. For this reason, Topl has endeavored to tightly and efficiently couple advanced functionality with tokenized-assets themselves in the core design of our blockchain. We employ a smart token ontology framework which combines user-defined, protocol-level assets and our Quivr DSL . Unpacking this, let's first introduce what is meant by user-defined, protocol-level assets. Unlike with many other blockchains, a user can classify and mint their own arbitrary assets on chain without the use of any additional code beyond the protocol itself. By not having to rely on abstractions to simply create and mint new assets, Topl makes user-defined assets \"first-class citizens\" on our blockchain. While it may seem almost trivial (or at least as trivial as any task involving a barely 10 year old technology can be) to just digitize an asset, there are a myriad of hidden assumptions that users and businesses inevitably have regarding how should behave. We expect some things to be divisible and interchangeable while others ought to be fixed and unique, or we assume that there exist some items that can be separated and recombined while there are others whose entropy is irreversible. To address these complexities, Topl has gone beyond the simplistic dichotomy of fungible and non-fungible tokens represented by the ERC20 versus ERC721 created by Ethereum and adopted by numerous other chains. Instead, Topl has developed a rigorous ontology for tokens created on the Topl Blockchain. We believe such a strong foundation is necessary in order to accurately capture the universe of \"real world\" assets that can be tokenized and build a robust set token-centered functionality without introducing confusion and difficulty to developers and users. Within Topl's token ontology, an asset is categorized through five questions: What is the atomicity of the asset? Or what is the base unit that we use to count instances of the asset? Is the asset fungible ? Can any two units be interchanged with each other without any effect? Is the asset unique ? Can only one instance of the asset exist? Is the asset divisible ? Can the asset be separated into multiple parts without becoming something different? Are such divisions reversible ? When the asset is divided can it be recombined without any additional work? Seeing as four of these questions are binary (yes/no), we might expect our ontology to produce 16 distinct categories. However, 10 of these potential categorizations are not logically possible. For example, if an asset is fungible, it cannot also be unique; if an asset is not divisible, such divisions obviously cannot be reversible (since they're already impossible). Ruling out these impossibilities, we have six distinct categories of tokens in our ontology, as pictured below. These six asset categories are capable of capturing the fundamental behavior of tangible assets ranging from coffee (fungible, reversibly divisible) to diamonds (non-fungible, non-reversibly divisible), as well as intangible assets ranging from commodity futures (fungible, non-divisible) to loan agreements (non-fungible, non-divisible). Topl's token ontology forms the basis for future token functionality as we will see when discussing Smart Tokens and Impact Credits. Topl's token ontology forms the basis for future token functionality, as we will see when discussing Smart Tokens and Impact Credits.","title":"Smart Token Ontology"},{"location":"fees-currency-and-consensus/polys/","text":"Polys More information coming soon","title":"Polys"},{"location":"fees-currency-and-consensus/polys/#polys","text":"More information coming soon","title":"Polys"},{"location":"fees-currency-and-consensus/stablecoin-and-transaction-fees/","text":"Stablecoin and Transaction Fees While nearly all PoS blockchain projects place considerable emphasis on the tokenomics relating to network ownership and control, far fewer, if any, place substantial effort into determining and tuning the tokenomics of their transaction fee mechanism. This decision is extremely counterproductive because while it may deliver strong and comprehensible token dynamics for project backers, actual blockchain users are given no such considerations and subsequently face volatile and appreciating costs. While most POS blockchain projects place emphasis on tokenomics relating to network ownership and control, far fewer, if any, place substantial effort into determining and tuning the tokenomics of their transaction fee mechanism. This decision is counterproductive, because, while it may deliver strong and comprehensible token dynamics for project backers, actual blockchain users are given no such considerations and subsequently face volatile and appreciating costs. Further, many blockchain designers neglect one central economic fact: not all monies are created equally. If you attempted to convince people to use shares of Coca-Cola as money, it would be immediately obvious that shares in a company were designed to have neither the micro-level properties nor the macro-level dynamics to be an effective currency. While those developing blockchain-based stablecoins separate from the protocol token of the underlying blockchain recognize this distinction, the payment of transaction fees is an activity that forces the protocol token to act as a currency regardless of how poor a fit this may be. The implicit requirement that a PoS blockchain include a token acting in the role of currency, presents a unique opportunity in the development of innovative stablecoins. The key issue faced by any currency creator is ensuring that at inception the currency provides utility. Currency adoption represents the epitome of network effects. A single individual (or even a small or disconnected group) obtains no utility from a currency if they are the only one who has adopted it or if the currency has not yet generated trust. Thus far, cryptocurrencies have solved this problem by either pegging their value (through some method of collateralization) to a fiat currency or commodity, as in the case of stablecoins; or by establishing dynamics of investment opportunities where the primary utility, and thus price support, is derived from an expectation of price appreciation. The requirement that a POS blockchain include a token acting in the role of currency presents a unique opportunity in the development of innovative stablecoins. The key issue faced by any currency creator is ensuring that at inception the currency provides utility. Currency adoption represents the epitome of network effects. A single individual (or even a small or disconnected group) obtains no utility from a currency if they are the only one who has adopted it or if the currency has not generated trust. Thus far, cryptocurrencies have solved this problem by either pegging their value (through some method of collateralization) to a fiat currency or commodity, as in the case of stablecoins, or by establishing dynamics of investment opportunities where the primary utility, and thus price support, is derived from an expectation of price appreciation. Fiat currencies meanwhile establish a baseline level of utility (and price support) from their exclusive role in being the means of payment for tax liabilities. In developing a layer 1 blockchain protocol, we are perhaps surprisingly presented with an identical opportunity. In establishing a stablecoin as the exclusive means of payment for the blockchain\u2019s fees, we can bootstrap a new currency free from bounds to other currencies and without the required expectation of appreciation. Fiat currencies establish a baseline utility (and price support) from their exclusive role in being the means of payment for tax liabilities. In developing a blockchain, we are perhaps surprisingly presented with an identical opportunity. In establishing a stablecoin as the exclusive means of payment for the blockchain\u2019s fees, we can bootstrap a new currency free from bounds to other currencies and without the required expectation of appreciation.","title":"Stablecoin and Transaction Fees"},{"location":"fees-currency-and-consensus/stablecoin-and-transaction-fees/#stablecoin-and-transaction-fees","text":"While nearly all PoS blockchain projects place considerable emphasis on the tokenomics relating to network ownership and control, far fewer, if any, place substantial effort into determining and tuning the tokenomics of their transaction fee mechanism. This decision is extremely counterproductive because while it may deliver strong and comprehensible token dynamics for project backers, actual blockchain users are given no such considerations and subsequently face volatile and appreciating costs. While most POS blockchain projects place emphasis on tokenomics relating to network ownership and control, far fewer, if any, place substantial effort into determining and tuning the tokenomics of their transaction fee mechanism. This decision is counterproductive, because, while it may deliver strong and comprehensible token dynamics for project backers, actual blockchain users are given no such considerations and subsequently face volatile and appreciating costs. Further, many blockchain designers neglect one central economic fact: not all monies are created equally. If you attempted to convince people to use shares of Coca-Cola as money, it would be immediately obvious that shares in a company were designed to have neither the micro-level properties nor the macro-level dynamics to be an effective currency. While those developing blockchain-based stablecoins separate from the protocol token of the underlying blockchain recognize this distinction, the payment of transaction fees is an activity that forces the protocol token to act as a currency regardless of how poor a fit this may be. The implicit requirement that a PoS blockchain include a token acting in the role of currency, presents a unique opportunity in the development of innovative stablecoins. The key issue faced by any currency creator is ensuring that at inception the currency provides utility. Currency adoption represents the epitome of network effects. A single individual (or even a small or disconnected group) obtains no utility from a currency if they are the only one who has adopted it or if the currency has not yet generated trust. Thus far, cryptocurrencies have solved this problem by either pegging their value (through some method of collateralization) to a fiat currency or commodity, as in the case of stablecoins; or by establishing dynamics of investment opportunities where the primary utility, and thus price support, is derived from an expectation of price appreciation. The requirement that a POS blockchain include a token acting in the role of currency presents a unique opportunity in the development of innovative stablecoins. The key issue faced by any currency creator is ensuring that at inception the currency provides utility. Currency adoption represents the epitome of network effects. A single individual (or even a small or disconnected group) obtains no utility from a currency if they are the only one who has adopted it or if the currency has not generated trust. Thus far, cryptocurrencies have solved this problem by either pegging their value (through some method of collateralization) to a fiat currency or commodity, as in the case of stablecoins, or by establishing dynamics of investment opportunities where the primary utility, and thus price support, is derived from an expectation of price appreciation. Fiat currencies meanwhile establish a baseline level of utility (and price support) from their exclusive role in being the means of payment for tax liabilities. In developing a layer 1 blockchain protocol, we are perhaps surprisingly presented with an identical opportunity. In establishing a stablecoin as the exclusive means of payment for the blockchain\u2019s fees, we can bootstrap a new currency free from bounds to other currencies and without the required expectation of appreciation. Fiat currencies establish a baseline utility (and price support) from their exclusive role in being the means of payment for tax liabilities. In developing a blockchain, we are perhaps surprisingly presented with an identical opportunity. In establishing a stablecoin as the exclusive means of payment for the blockchain\u2019s fees, we can bootstrap a new currency free from bounds to other currencies and without the required expectation of appreciation.","title":"Stablecoin and Transaction Fees"},{"location":"fees-currency-and-consensus/taktikos-pos/","text":"Taktikos PoS A blockchain\u2019s consensus algorithm plays a crucial role in its overall design. Directly, the consensus algorithm is the set of rules governing block-producing nodes. Indirectly, a blockchain\u2019s choice of consensus algorithm determines its energy footprint and influences transaction speed, throughput, and finality, and level of decentralization. The centrality of blockchain consensus leads protocol designers to look to closely balance solid fundamentals with promising advances. This is exactly what Topl\u2019s team sought to (and has) achieved with the creation of Taktikos, the first regularized Nakamoto consensus protocol 1 . Foundation Taktikos is built from the foundation established by IOHK in Ouroboros Praos , and as such inherits key advantages: As a pure Nakamoto-style protocol, Taktikos consensus remains robust and can continue to produce blocks with only \\(>\\frac{1}{2}\\) honest stake. This is in contrast with BFT protocols that can remain in consensus only if more than \\(>\\frac{2}{3}\\) of the network\u2019s stake is honest. Taktikos can make use of a dynamically available and fully permissionless set of stakers with no fundamental maximum on the set of active block producers (as is the case for EOS), or even minimum thresholds for stake ownership (as in Ethereum\u2019s Casper design). Among Praos\u2019s key advantages is a provably secure consensus model that does not rely on any trusted execution environments or other hardware-related assumptions. Leveraging a cryptographic construction known as verifiable random functions (VRFs), Praos and later algorithms such as Taktikos do not need to be concerned with hardware advancements that may render them insecure, as is the case with algorithms (such as Ethereum\u2019s Casper and Proof of Time used by Chia) that rely on the alternative construction of verifiable delay functions (VDFs). Praos and the larger family of Ouroboros consensus algorithms have been formulated, studied, and verified under the cryptography framework of universal composability (UC). Not only does such a formulation deliver an unsurpassed standard of rigor to security assumptions, it ensures that the base protocol can be composed with additional protocols to extend functionality or interoperate. Long-tails and slot-based consensus One of the key drawbacks of Nakamoto consensus has been high variability in the timing of block production. While the average block time for Bitcoin is set at 10 minutes, this is only an average, and there is a longtail where a new block may not arrive for hours. Probability Density Function (PDF) of block time intervals in the Bitcoin network, showing an exponential profile characteristic of the statistical independence of valid proofs discovered in the mining process. Reference: C. Decker and R. Wattenhofer, \"Information propagation in the Bitcoin network,\" IEEE P2P 2013 Proceedings, 2013, pp. 1-10, doi: 10.1109/P2P.2013.6688704. This exponential distribution can be found across blockchains leveraging Nakamoto consensus, as the process of block creation relies on applying a (near) constant probability from one block to another that a new block is produced in any single moment. Not only does this introduce the problem that the blockchain network will occasionally stall , failing to confirm new transactions for an extended period, but it can incentivize centralization where block producers can benefit from grouping themselves geographically. This was exactly the behavior that was realized with the so-call slot battles in Cardano ( reference ). To solve this problem, Topl developed Taktikos. The innovation of Taktikos is the introduction of what we have dubbed, local dynamic difficulty . Like other proof-of-stake consensus protocols, Taktikos is round based , meaning that blocks are created and added in set rounds, with forgers each having a stake-dependent probability of producing a valid block to extend the chain in each slot. However, Taktikos is unique in that the probability of block creation is not constant and uses slots to act as a clock to evolve the difficulty of producing a block over time. The goal of this perturbation is to regularize production of new blocks so that blockchain stalls are minimized. While many potential difficulty curves were considered and simulated, one curve in particular stands out for the chain growth and security properties it produces, the snowplow curve (below). The time between blocks is shown on the x-axis, the y-axis corresponds to the value of the active slot coefficient, or difficulty, at a given slot interval \\(\\delta\\) . The snowplow curve allows for blocks to be produced across two distinct periods, the Forging Window and the Recovery Phase. The effect of this curve with a a notable discontinuity between the two periods (the Cutoff), is to transform the distribution of new block production from the exponential distribution found in other protocols to a tight bell curve(-like) distribution, named the Taktikkos distribution, centered around the average block time. A sample distribution function produced by Taktikos. The distribution goes to zero as \\(\\delta\\) approaches zero producing significantly fewer asynchronous extensions, or network stalls. The difficulty curve parameters in this example are \\(\\gamma = 40\\) , \\(\\Psi = 0\\) , \\(fA = 0.4\\) , and \\(fB = 0.05\\) . Beyond more predictable block production, the introduction of Taktikos yields improved chain growth properties that in turn provide faster transaction finality , increased transaction throughput , and reduced adversarial influence . The complete methods by which these benefits are achieved will be detailed in future work. We will describe them more briefly now. Faster transaction finality is realized directly through the novel block distribution shown above. Simply put, because the vast majority of blocks are produced within a tight window of time immediately centered on the average block time, the probability that a transaction has been included on anything other than the canonical chain is substantially less than would be the case if blocks were produced according to the more standard exponential distribution. In the case of an exponential distribution describing block production, a transaction will often be included in either a block that is produced too quickly as to fall below the average network delay and thus have a higher probability of being reorged out, or be relegated into a block that does not get added for an expended period. Turning to the matter of throughput, the consideration becomes efficiency. Namely, the Taktikos distribution for block production enables blocks to be filled more efficiently. Since block production according to a Taktikos distribution results in fewer block reorgs (for a given block time), transactions are included in fewer blocks on average. As transactions are included in fewer blocks, there is comparatively more space available for non-redundant transactions, thus increasing overall throughput. Finally, and perhaps most interestingly, the introduction of local dynamic difficulty according to the snowplow curve reduces the power of adversarial actors in the system. Returning to the snowplow curve and Taktikos distribution, we observe that the period shortly following the production of a block, also known as the forging window, is responsible for the vast majority of block production given the lower difficulty at the beginning of that window. Another way to think about this is to recognize that \u201cblocks beget blocks.\u201d The result of blocks begetting blocks is to see that any adversary attempting to subvert the canonical chain by only extending on their own tine (ignoring blocks produced by other nodes) will have a distinct disadvantage in creating blocks even for slots where they would otherwise be eligible to extend the chain because they will probabilistically never be eligible to forge while still in the Forging Window from their previously minted block. The effect of this is that with proper parameterizations, Taktikos will diminish the power of any adversary (with less than 50% of active stake) to equal to less than the influence they would have if they were to behave honestly. In this plot we see that the power of a network adversary can be tuned based on the fB, or the difficulty of block production during the Recovery Period. In summary, while there are several lines of potential further exploration for Taktikos, we believe that parametrizations already obtained and currently being implemented into the Topl Blockchain offer notable improvements in transaction finality, network throughput, and security compared to other POS protocols, all while retaining the strong fundamentals of Ouroboros Praos. The term Nakamoto consensus describes an incentive-driven, probabilistic consensus algorithm where chain extension eligibility is determined via a race condition, originally presented in the Bitcoin whitepaper . \u21a9","title":"Taktikos Proof-of-Stake"},{"location":"fees-currency-and-consensus/taktikos-pos/#taktikos-pos","text":"A blockchain\u2019s consensus algorithm plays a crucial role in its overall design. Directly, the consensus algorithm is the set of rules governing block-producing nodes. Indirectly, a blockchain\u2019s choice of consensus algorithm determines its energy footprint and influences transaction speed, throughput, and finality, and level of decentralization. The centrality of blockchain consensus leads protocol designers to look to closely balance solid fundamentals with promising advances. This is exactly what Topl\u2019s team sought to (and has) achieved with the creation of Taktikos, the first regularized Nakamoto consensus protocol 1 .","title":"Taktikos PoS"},{"location":"fees-currency-and-consensus/taktikos-pos/#foundation","text":"Taktikos is built from the foundation established by IOHK in Ouroboros Praos , and as such inherits key advantages: As a pure Nakamoto-style protocol, Taktikos consensus remains robust and can continue to produce blocks with only \\(>\\frac{1}{2}\\) honest stake. This is in contrast with BFT protocols that can remain in consensus only if more than \\(>\\frac{2}{3}\\) of the network\u2019s stake is honest. Taktikos can make use of a dynamically available and fully permissionless set of stakers with no fundamental maximum on the set of active block producers (as is the case for EOS), or even minimum thresholds for stake ownership (as in Ethereum\u2019s Casper design). Among Praos\u2019s key advantages is a provably secure consensus model that does not rely on any trusted execution environments or other hardware-related assumptions. Leveraging a cryptographic construction known as verifiable random functions (VRFs), Praos and later algorithms such as Taktikos do not need to be concerned with hardware advancements that may render them insecure, as is the case with algorithms (such as Ethereum\u2019s Casper and Proof of Time used by Chia) that rely on the alternative construction of verifiable delay functions (VDFs). Praos and the larger family of Ouroboros consensus algorithms have been formulated, studied, and verified under the cryptography framework of universal composability (UC). Not only does such a formulation deliver an unsurpassed standard of rigor to security assumptions, it ensures that the base protocol can be composed with additional protocols to extend functionality or interoperate.","title":"Foundation"},{"location":"fees-currency-and-consensus/taktikos-pos/#long-tails-and-slot-based-consensus","text":"One of the key drawbacks of Nakamoto consensus has been high variability in the timing of block production. While the average block time for Bitcoin is set at 10 minutes, this is only an average, and there is a longtail where a new block may not arrive for hours. Probability Density Function (PDF) of block time intervals in the Bitcoin network, showing an exponential profile characteristic of the statistical independence of valid proofs discovered in the mining process. Reference: C. Decker and R. Wattenhofer, \"Information propagation in the Bitcoin network,\" IEEE P2P 2013 Proceedings, 2013, pp. 1-10, doi: 10.1109/P2P.2013.6688704. This exponential distribution can be found across blockchains leveraging Nakamoto consensus, as the process of block creation relies on applying a (near) constant probability from one block to another that a new block is produced in any single moment. Not only does this introduce the problem that the blockchain network will occasionally stall , failing to confirm new transactions for an extended period, but it can incentivize centralization where block producers can benefit from grouping themselves geographically. This was exactly the behavior that was realized with the so-call slot battles in Cardano ( reference ). To solve this problem, Topl developed Taktikos. The innovation of Taktikos is the introduction of what we have dubbed, local dynamic difficulty . Like other proof-of-stake consensus protocols, Taktikos is round based , meaning that blocks are created and added in set rounds, with forgers each having a stake-dependent probability of producing a valid block to extend the chain in each slot. However, Taktikos is unique in that the probability of block creation is not constant and uses slots to act as a clock to evolve the difficulty of producing a block over time. The goal of this perturbation is to regularize production of new blocks so that blockchain stalls are minimized. While many potential difficulty curves were considered and simulated, one curve in particular stands out for the chain growth and security properties it produces, the snowplow curve (below). The time between blocks is shown on the x-axis, the y-axis corresponds to the value of the active slot coefficient, or difficulty, at a given slot interval \\(\\delta\\) . The snowplow curve allows for blocks to be produced across two distinct periods, the Forging Window and the Recovery Phase. The effect of this curve with a a notable discontinuity between the two periods (the Cutoff), is to transform the distribution of new block production from the exponential distribution found in other protocols to a tight bell curve(-like) distribution, named the Taktikkos distribution, centered around the average block time. A sample distribution function produced by Taktikos. The distribution goes to zero as \\(\\delta\\) approaches zero producing significantly fewer asynchronous extensions, or network stalls. The difficulty curve parameters in this example are \\(\\gamma = 40\\) , \\(\\Psi = 0\\) , \\(fA = 0.4\\) , and \\(fB = 0.05\\) . Beyond more predictable block production, the introduction of Taktikos yields improved chain growth properties that in turn provide faster transaction finality , increased transaction throughput , and reduced adversarial influence . The complete methods by which these benefits are achieved will be detailed in future work. We will describe them more briefly now. Faster transaction finality is realized directly through the novel block distribution shown above. Simply put, because the vast majority of blocks are produced within a tight window of time immediately centered on the average block time, the probability that a transaction has been included on anything other than the canonical chain is substantially less than would be the case if blocks were produced according to the more standard exponential distribution. In the case of an exponential distribution describing block production, a transaction will often be included in either a block that is produced too quickly as to fall below the average network delay and thus have a higher probability of being reorged out, or be relegated into a block that does not get added for an expended period. Turning to the matter of throughput, the consideration becomes efficiency. Namely, the Taktikos distribution for block production enables blocks to be filled more efficiently. Since block production according to a Taktikos distribution results in fewer block reorgs (for a given block time), transactions are included in fewer blocks on average. As transactions are included in fewer blocks, there is comparatively more space available for non-redundant transactions, thus increasing overall throughput. Finally, and perhaps most interestingly, the introduction of local dynamic difficulty according to the snowplow curve reduces the power of adversarial actors in the system. Returning to the snowplow curve and Taktikos distribution, we observe that the period shortly following the production of a block, also known as the forging window, is responsible for the vast majority of block production given the lower difficulty at the beginning of that window. Another way to think about this is to recognize that \u201cblocks beget blocks.\u201d The result of blocks begetting blocks is to see that any adversary attempting to subvert the canonical chain by only extending on their own tine (ignoring blocks produced by other nodes) will have a distinct disadvantage in creating blocks even for slots where they would otherwise be eligible to extend the chain because they will probabilistically never be eligible to forge while still in the Forging Window from their previously minted block. The effect of this is that with proper parameterizations, Taktikos will diminish the power of any adversary (with less than 50% of active stake) to equal to less than the influence they would have if they were to behave honestly. In this plot we see that the power of a network adversary can be tuned based on the fB, or the difficulty of block production during the Recovery Period. In summary, while there are several lines of potential further exploration for Taktikos, we believe that parametrizations already obtained and currently being implemented into the Topl Blockchain offer notable improvements in transaction finality, network throughput, and security compared to other POS protocols, all while retaining the strong fundamentals of Ouroboros Praos. The term Nakamoto consensus describes an incentive-driven, probabilistic consensus algorithm where chain extension eligibility is determined via a race condition, originally presented in the Bitcoin whitepaper . \u21a9","title":"Long-tails and slot-based consensus"},{"location":"fees-currency-and-consensus/weighted-transactions/","text":"Weighted Transactions When it comes to costs, there are few technologies that present users with a range comparable to competing blockchains. Transaction fees may range from a thousandth of a cent to surges above 100 dollars (US). While we will not concern ourselves with the various reasons that this range exists, we will lay out the issues with each of these two extremes and then demonstrate how the resulting apparent no-win situation can be resolved. First, let\u2019s establish the upper constraints on transaction fees. As a technology that presents itself as inclusive and opening both finance and general economic opportunity, it is a paramount concern that the fee structure presented by blockchain technology be aligned with this goal. The World Bank currently sets an income of $1.90 per day as the threshold for extreme poverty, accounting for nearly 700 million individuals. Meanwhile, just shy of half (43.5%) of the world\u2019s population subsists on less than $5.50 per day. From this it is easy to establish the requirement that if blockchain usage is intended to become a daily reality for groups such as smallholder farmers in the Global South, daily expenditures towards transaction fees must come in at or below $0.01 with each transaction falling in the range of $0.001 to $0.002. Having established at least one upper bound on transaction fees, we must establish the second condition, namely that in order to be considered maximally secure, a proof-of-stake blockchain network must collect (or expect to collect) a certain amount of transaction fees. The logic behind this requirement has three parts. A POS blockchain is rendered unsecure when the cost of attacking the blockchain falls below the benefit one could theoretically obtain by launching such an attack. The cost of attacking a POS blockchain linearly scales with its total market capitalization (assuming constant levels of staking participation). The total market capitalization of a POS blockchain can be best approximated as the net present value of future transaction fees. While we expound on this argument here (blog coming soon, 1), let us move on for a moment to the consequence of accepting the simplified premise that to be secure a proof of stake blockchain must collect sufficient transaction fees. In 2020, payment card networks processed a combined total of 468 billion transactions worldwide with the largest processor, Visa, handling 188 billion transactions. Even at such scales, more than 400 times the current Ethereum network usage, the upper bound established by our desire to see adoption across the Global South would cap the total transaction fees that could be collected at ~$280MM, far below the threshold required to support a secure market capitalization. Given that we both do not wish to push the limits of affordability for the most vulnerable populations and recognize that an essential global infrastructure cannot be sustained on revenues of around a quarter billion dollars, we must identify a way to \u201csquare the circle\u201d. In 2014, Ethereum introduced the concept of differentiated transaction costs based on the idea of computational complexity. While this is an essential spam prevention mechanism for any blockchain that presents a Turing-complete execution layer, it fails to capture the most expensive resource involved in maintaining a blockchain network. Given that blockchains are both fully redundant and maintain a complete ledger history from genesis, storage, rather than computation, represents the most constrained and expensive resource in maintaining a blockchain network. Given this, we propose a system by which transactions on the Topl Blockchain are priced based on their ledger weight, or how much previous ledger state they may either require or rely on. To understand this system, let us begin with simple transactions, the minting and transfer of user-defined assets in Topl\u2019s UTxO-ledger blockchain. In the above transaction flow, we can see that each UTxO ( asset box ) is assigned a weight. This weight begins at 1 upon minting and increments by 1 for each child box. In the event that two boxes are combined (e.g. representing when two batches of coffee or are blended together at roasting), the produced output carries the combined weight plus 1. The ledger weight of boxes is connected to transaction fees (paid in Polys), through the following formula: \\[ \\sqrt{(1+\\sum_{\\textit{inputBoxes}} \\textit{ledgerWeight} )}\\times \\textit{baseFee} \\]","title":"Transaction Weight"},{"location":"fees-currency-and-consensus/weighted-transactions/#weighted-transactions","text":"When it comes to costs, there are few technologies that present users with a range comparable to competing blockchains. Transaction fees may range from a thousandth of a cent to surges above 100 dollars (US). While we will not concern ourselves with the various reasons that this range exists, we will lay out the issues with each of these two extremes and then demonstrate how the resulting apparent no-win situation can be resolved. First, let\u2019s establish the upper constraints on transaction fees. As a technology that presents itself as inclusive and opening both finance and general economic opportunity, it is a paramount concern that the fee structure presented by blockchain technology be aligned with this goal. The World Bank currently sets an income of $1.90 per day as the threshold for extreme poverty, accounting for nearly 700 million individuals. Meanwhile, just shy of half (43.5%) of the world\u2019s population subsists on less than $5.50 per day. From this it is easy to establish the requirement that if blockchain usage is intended to become a daily reality for groups such as smallholder farmers in the Global South, daily expenditures towards transaction fees must come in at or below $0.01 with each transaction falling in the range of $0.001 to $0.002. Having established at least one upper bound on transaction fees, we must establish the second condition, namely that in order to be considered maximally secure, a proof-of-stake blockchain network must collect (or expect to collect) a certain amount of transaction fees. The logic behind this requirement has three parts. A POS blockchain is rendered unsecure when the cost of attacking the blockchain falls below the benefit one could theoretically obtain by launching such an attack. The cost of attacking a POS blockchain linearly scales with its total market capitalization (assuming constant levels of staking participation). The total market capitalization of a POS blockchain can be best approximated as the net present value of future transaction fees. While we expound on this argument here (blog coming soon, 1), let us move on for a moment to the consequence of accepting the simplified premise that to be secure a proof of stake blockchain must collect sufficient transaction fees. In 2020, payment card networks processed a combined total of 468 billion transactions worldwide with the largest processor, Visa, handling 188 billion transactions. Even at such scales, more than 400 times the current Ethereum network usage, the upper bound established by our desire to see adoption across the Global South would cap the total transaction fees that could be collected at ~$280MM, far below the threshold required to support a secure market capitalization. Given that we both do not wish to push the limits of affordability for the most vulnerable populations and recognize that an essential global infrastructure cannot be sustained on revenues of around a quarter billion dollars, we must identify a way to \u201csquare the circle\u201d. In 2014, Ethereum introduced the concept of differentiated transaction costs based on the idea of computational complexity. While this is an essential spam prevention mechanism for any blockchain that presents a Turing-complete execution layer, it fails to capture the most expensive resource involved in maintaining a blockchain network. Given that blockchains are both fully redundant and maintain a complete ledger history from genesis, storage, rather than computation, represents the most constrained and expensive resource in maintaining a blockchain network. Given this, we propose a system by which transactions on the Topl Blockchain are priced based on their ledger weight, or how much previous ledger state they may either require or rely on. To understand this system, let us begin with simple transactions, the minting and transfer of user-defined assets in Topl\u2019s UTxO-ledger blockchain. In the above transaction flow, we can see that each UTxO ( asset box ) is assigned a weight. This weight begins at 1 upon minting and increments by 1 for each child box. In the event that two boxes are combined (e.g. representing when two batches of coffee or are blended together at roasting), the produced output carries the combined weight plus 1. The ledger weight of boxes is connected to transaction fees (paid in Polys), through the following formula: \\[ \\sqrt{(1+\\sum_{\\textit{inputBoxes}} \\textit{ledgerWeight} )}\\times \\textit{baseFee} \\]","title":"Weighted Transactions"},{"location":"infrastructure-and-tooling/brambl/","text":"Brambl Before a blockchain can be inclusive to users, it must be accessible to developers. To simplify and streamline the process of building DApps powered by the Topl Blockchain, we\u2019ve developed a suite of API libraries called Brambl. Brambl gives application developers an easy to integrate library that will both enable their application to communicate with the blockchain and carry out all necessary cryptographic, including hashing data and signing transactions. Paired with code samples and thorough documentation, Brambl offers a strong example of how to ensure a blockchain is accessible to developers. To maximize the number of developers and potential DApps that can leverage Brambl, we have released this API library for JavaScript, Python, Dart, and Scala (compatible with JVM languages more generally), covering an estimated 59% of potential development projects based on the popularity of various web and application frameworks. Compared with many other blockchains teams that have only put in the effort to develop a single library (most often in JavaScript), we believe this is a strong start. Topl also has plans for at least two more languages to be supported by the end of 2022. Finally, seeing as the suite of Brambl libraries was developed for the community of Topl developers, it is only appropriate that these developers have the opportunity to contribute to and modify these libraries to better fit their own requirements. All Brambl libraries are released as open source under the Mozilla Public License 2.0.","title":"Brambl API"},{"location":"infrastructure-and-tooling/brambl/#brambl","text":"Before a blockchain can be inclusive to users, it must be accessible to developers. To simplify and streamline the process of building DApps powered by the Topl Blockchain, we\u2019ve developed a suite of API libraries called Brambl. Brambl gives application developers an easy to integrate library that will both enable their application to communicate with the blockchain and carry out all necessary cryptographic, including hashing data and signing transactions. Paired with code samples and thorough documentation, Brambl offers a strong example of how to ensure a blockchain is accessible to developers. To maximize the number of developers and potential DApps that can leverage Brambl, we have released this API library for JavaScript, Python, Dart, and Scala (compatible with JVM languages more generally), covering an estimated 59% of potential development projects based on the popularity of various web and application frameworks. Compared with many other blockchains teams that have only put in the effort to develop a single library (most often in JavaScript), we believe this is a strong start. Topl also has plans for at least two more languages to be supported by the end of 2022. Finally, seeing as the suite of Brambl libraries was developed for the community of Topl developers, it is only appropriate that these developers have the opportunity to contribute to and modify these libraries to better fit their own requirements. All Brambl libraries are released as open source under the Mozilla Public License 2.0.","title":"Brambl"},{"location":"infrastructure-and-tooling/ribn/","text":"Ribn In order to be deliver on the promise of full user sovereignty, all decentralized applications (DApps), must enable users to interact with the application while retaining full control of their blockchain keys. Only by controlling their own keys can blockchain users fully guarantee that their crypto remains their own and that they are invulnerable to their signature being \u201cforged.\u201d For this reason, blockchain wallets occupy a critical place in any blockchain \u201cstack.\u201d Topl\u2019s wallet, known as Ribn, places both accessibility and trustlessness at its core. We believe this dual focus serves Topl\u2019s broader mission of delivering a blockchain with an unsurpassed level of inclusivity. First, Ribn is a fully cross-platform wallet, capable of being run as a web extension or a mobile application on either iOS or Android. The \u201cwrite once, deploy everywhere\u201d approach ensures that no platform ever becomes privileged over another. Often, when wallets or other applications are developed for a single platform, even if a wallet is developed for each platform individually, one platform becomes the \u201cpreferred\u201d platform favored by the blockchain\u2019s development team(s), even if this results in exclusion of or an inferior experience for a large portion of the blockchain\u2019s community. Second, Ribn lets users be fully sovereign, requiring them to extend as little trust as possible. In support of this goal, Ribn\u2019s codebase is entirely open source. Any user or interested party is welcome to investigate the Ribn code to ensure that it meets their standards and contains no backdoors or other vulnerabilities. Equally or more important is the functionality given to users before requiring them to rely on others for the state of the blockchain. The vast majority of users will have their wallets stored on devices that either cannot or simply do not operate as full nodes. This means that their wallet has only a limited view of the blockchain state. It is here that the distinct advantage of Topl\u2019s UTxO ledger design comes into play. In the case of the more common account-based ledger model found in blockchains like Ethereum and Solana, wallets without a full view of the network cannot directly verify the output or execution of smart contracts. Given that in these systems even simple token transfers are performed using smart contracts, ordinary users are effectively dependent on other parties operating full nodes to verify network activity and state for them. Topl\u2019s design keeps the state of every chain program (Topl\u2019s version of smart contracts) separate as an independent \u201cchain\u201d of UTxOs. In effect, this means that Ribn users can selectively query and verify only the network state relevant to them at that moment, removing need to extend a substantial amount of trust to other parties in the network.","title":"Ribn Wallet"},{"location":"infrastructure-and-tooling/ribn/#ribn","text":"In order to be deliver on the promise of full user sovereignty, all decentralized applications (DApps), must enable users to interact with the application while retaining full control of their blockchain keys. Only by controlling their own keys can blockchain users fully guarantee that their crypto remains their own and that they are invulnerable to their signature being \u201cforged.\u201d For this reason, blockchain wallets occupy a critical place in any blockchain \u201cstack.\u201d Topl\u2019s wallet, known as Ribn, places both accessibility and trustlessness at its core. We believe this dual focus serves Topl\u2019s broader mission of delivering a blockchain with an unsurpassed level of inclusivity. First, Ribn is a fully cross-platform wallet, capable of being run as a web extension or a mobile application on either iOS or Android. The \u201cwrite once, deploy everywhere\u201d approach ensures that no platform ever becomes privileged over another. Often, when wallets or other applications are developed for a single platform, even if a wallet is developed for each platform individually, one platform becomes the \u201cpreferred\u201d platform favored by the blockchain\u2019s development team(s), even if this results in exclusion of or an inferior experience for a large portion of the blockchain\u2019s community. Second, Ribn lets users be fully sovereign, requiring them to extend as little trust as possible. In support of this goal, Ribn\u2019s codebase is entirely open source. Any user or interested party is welcome to investigate the Ribn code to ensure that it meets their standards and contains no backdoors or other vulnerabilities. Equally or more important is the functionality given to users before requiring them to rely on others for the state of the blockchain. The vast majority of users will have their wallets stored on devices that either cannot or simply do not operate as full nodes. This means that their wallet has only a limited view of the blockchain state. It is here that the distinct advantage of Topl\u2019s UTxO ledger design comes into play. In the case of the more common account-based ledger model found in blockchains like Ethereum and Solana, wallets without a full view of the network cannot directly verify the output or execution of smart contracts. Given that in these systems even simple token transfers are performed using smart contracts, ordinary users are effectively dependent on other parties operating full nodes to verify network activity and state for them. Topl\u2019s design keeps the state of every chain program (Topl\u2019s version of smart contracts) separate as an independent \u201cchain\u201d of UTxOs. In effect, this means that Ribn users can selectively query and verify only the network state relevant to them at that moment, removing need to extend a substantial amount of trust to other parties in the network.","title":"Ribn"},{"location":"introduction/ecosystem-positioning/","text":"Another Layer 1 Among the major trends of thinking in the blockchain space is the idea of maximalism. In the blockchain context, maximalism is the belief that there exists an already developed blockchain, most often Ethereum or Bitcoin, that is already capable of handling all potential use cases that require blockchain and that efforts to create new \u201clayer 1\u201d blockchains are pointless and perhaps even counterproductive. A major trend in blockchain is the idea of maximalism. Maximalism is the belief that an already-developed blockchain, most often Ethereum or Bitcoin, can handle all potential use cases, and that new \u201clayer 1\u201d blockchains are pointless or counterproductive. At Topl, we reject maximalism for two reasons: the current age of blockchain technology and the technical realities of such infrastructure-level technologies. Blockchain technology was introduced, as the first implementation of a value-bearing network without a central authority, in 2008 with the Bitcoin whitepaper. By comparison, the first algorithms and programs for artificial intelligence and machine learning were written in the 1950s and 1960s. Despite this 60-plus-year history, dominant frameworks for AI and machine learning, such as Caffe and Tensorflow, were only developed in 2013 and 2015. By a similar token, Facebook belongs to, at a minimum, the fourth generation of social media, preceded in dominance by AIM, Friendster, and MySpace. Facebook is still facing increasingly robust competition from newer platforms, such as TikTok. At the same time, Google only came to the market after other search engines such as Lycos, Infoseek, AltaVista, Ask Jeeves, and Yandex had launched. As we look at these other technologies with equally challenging engineering requirements and network effects to blockchain, we can conclude that any expectation that a first or even second generation blockchain network represents the culmination of an entire technology movement has taken a dramatically shortsighted view of innovation. As we look at these other technologies with equally challenging engineering requirements and network effects to blockchain, we can conclude that any expectation that a first- or even second-generation blockchain network is the culmination of an entire technology movement takes a dramatically shortsighted view of innovation. While this first argument may leave open the possibility that at some time in the future there will be a singular blockchain network, the technical requirements and contradictions imposed on blockchain technology make the emergence of a single maximal blockchain extremely unlikely even once web3 is \"mature\". While this first argument may leave open the possibility that at some future time there will be a singular blockchain network, the technical requirements and contradictions imposed on blockchain technology make the emergence of a maximal blockchain impossible rather than merely postponed to the future. Embedded in any infrastructure technology are a number of inescapable tradeoffs that must be made, security versus cost and throughput versus decentralization being among the most significant. So long as the problems being addressed by blockchain technology remain diverse, there will remain no single correct choice on any two opposing characteristics. An application such as stock trading may demand absolute maximization of transaction throughput while peer-to-peer lending would benefit greatly from maximized decentralization. Embedded in any infrastructure technology are a number of inescapable tradeoffs, including, among the most significant, security versus cost and throughput versus decentralization. As long as the problems meant to be addressed by blockchain remain diverse, there will be no single correct choice. An application such as commodity trading may demand absolute maximization of transaction throughput, while peer-to-peer lending would benefit greatly from maximized decentralization. In fact, the notion of maximalism is also proven flawed by the plans of the blockchain with the most maximalists: Ethereum. Central to the design of Eth2, the ongoing upgrade to the Ethereum network, is the concept of shards. Similar to Polkadot \u201cparachains\u201d or Cosmos\u2019s \u201czones,\u201d Ethereum shards can be nearly classified as independent blockchains that merely embody a common communication protocol and may share validators or other crypto-economic infrastructure. Having rejected the idea of maximalism and developing our own layer 1 blockchain network, we recognize that it is incumbent upon Topl to provide an answer to the question of interoperability, \u201cif there are going to be multiple blockchains, how will they still interact?\u201d and to offer a vision of value accrual in our blockchain economy. Having rejected the idea of maximalism, we recognize that it is incumbent upon Topl to provide an answer to the question of interoperability \u2014 how will multiple blockchains interact? \u2014 and to offer a vision of value accrual in our blockchain economy. Having rejected the idea of maximalism and answered the question what is blockchain uniquely suited for, we turn to Topl's blockchain thesis and answer how Topl has developed an opinionated blockchain with a focus on certain early use cases. Based on the blockchain USP of disintermediated trust and direct inclusion, we believe that any market or value chain that currently lacks trust, infrastructure, and existing standards, especially those with highly heterogeneous actors can be considered ideal candidates for blockchain adoption. Note We can think of networks as being more heterogeneous if they're composed of actors of greatly varying sizes, different entity types (private companies, NGOs, governments, etc), and situated in different legal jurisdictions. The above characterization fits supply chains, especially those originating in the Global South, carbon markets, and the Cambrian explosion of ESG claims exceedingly well. As carbon neutrality and ESG claims grow in popularity, incentives increase for greenwashing and similar practices. Trust and verifiability for these claims will become paramount. At the same time, the global diversification of the economy means that more and more business is continually done in or involving parts of the world with legal and regulatory systems quite literally foreign to us, and where traditional means of dispute settlement may not be feasible. 32% of Fortune 500 companies have committed to carbon neutrality ( as of October 2020 ) 80% of consumers report being more likely to purchase from a company with strong ESG practices ( via PWC ) 85% of investors surveyed report considering ESG data in their investment decisions ( via Gartner ) Between 2016 and 2050, the share of global GDP accounted for by the US and the EU is expected to fall from 31% to 21% as economic growth shifts further toward emerging markets ( via PWC ).","title":"Another Layer 1"},{"location":"introduction/ecosystem-positioning/#another-layer-1","text":"Among the major trends of thinking in the blockchain space is the idea of maximalism. In the blockchain context, maximalism is the belief that there exists an already developed blockchain, most often Ethereum or Bitcoin, that is already capable of handling all potential use cases that require blockchain and that efforts to create new \u201clayer 1\u201d blockchains are pointless and perhaps even counterproductive. A major trend in blockchain is the idea of maximalism. Maximalism is the belief that an already-developed blockchain, most often Ethereum or Bitcoin, can handle all potential use cases, and that new \u201clayer 1\u201d blockchains are pointless or counterproductive. At Topl, we reject maximalism for two reasons: the current age of blockchain technology and the technical realities of such infrastructure-level technologies. Blockchain technology was introduced, as the first implementation of a value-bearing network without a central authority, in 2008 with the Bitcoin whitepaper. By comparison, the first algorithms and programs for artificial intelligence and machine learning were written in the 1950s and 1960s. Despite this 60-plus-year history, dominant frameworks for AI and machine learning, such as Caffe and Tensorflow, were only developed in 2013 and 2015. By a similar token, Facebook belongs to, at a minimum, the fourth generation of social media, preceded in dominance by AIM, Friendster, and MySpace. Facebook is still facing increasingly robust competition from newer platforms, such as TikTok. At the same time, Google only came to the market after other search engines such as Lycos, Infoseek, AltaVista, Ask Jeeves, and Yandex had launched. As we look at these other technologies with equally challenging engineering requirements and network effects to blockchain, we can conclude that any expectation that a first or even second generation blockchain network represents the culmination of an entire technology movement has taken a dramatically shortsighted view of innovation. As we look at these other technologies with equally challenging engineering requirements and network effects to blockchain, we can conclude that any expectation that a first- or even second-generation blockchain network is the culmination of an entire technology movement takes a dramatically shortsighted view of innovation. While this first argument may leave open the possibility that at some time in the future there will be a singular blockchain network, the technical requirements and contradictions imposed on blockchain technology make the emergence of a single maximal blockchain extremely unlikely even once web3 is \"mature\". While this first argument may leave open the possibility that at some future time there will be a singular blockchain network, the technical requirements and contradictions imposed on blockchain technology make the emergence of a maximal blockchain impossible rather than merely postponed to the future. Embedded in any infrastructure technology are a number of inescapable tradeoffs that must be made, security versus cost and throughput versus decentralization being among the most significant. So long as the problems being addressed by blockchain technology remain diverse, there will remain no single correct choice on any two opposing characteristics. An application such as stock trading may demand absolute maximization of transaction throughput while peer-to-peer lending would benefit greatly from maximized decentralization. Embedded in any infrastructure technology are a number of inescapable tradeoffs, including, among the most significant, security versus cost and throughput versus decentralization. As long as the problems meant to be addressed by blockchain remain diverse, there will be no single correct choice. An application such as commodity trading may demand absolute maximization of transaction throughput, while peer-to-peer lending would benefit greatly from maximized decentralization. In fact, the notion of maximalism is also proven flawed by the plans of the blockchain with the most maximalists: Ethereum. Central to the design of Eth2, the ongoing upgrade to the Ethereum network, is the concept of shards. Similar to Polkadot \u201cparachains\u201d or Cosmos\u2019s \u201czones,\u201d Ethereum shards can be nearly classified as independent blockchains that merely embody a common communication protocol and may share validators or other crypto-economic infrastructure. Having rejected the idea of maximalism and developing our own layer 1 blockchain network, we recognize that it is incumbent upon Topl to provide an answer to the question of interoperability, \u201cif there are going to be multiple blockchains, how will they still interact?\u201d and to offer a vision of value accrual in our blockchain economy. Having rejected the idea of maximalism, we recognize that it is incumbent upon Topl to provide an answer to the question of interoperability \u2014 how will multiple blockchains interact? \u2014 and to offer a vision of value accrual in our blockchain economy. Having rejected the idea of maximalism and answered the question what is blockchain uniquely suited for, we turn to Topl's blockchain thesis and answer how Topl has developed an opinionated blockchain with a focus on certain early use cases. Based on the blockchain USP of disintermediated trust and direct inclusion, we believe that any market or value chain that currently lacks trust, infrastructure, and existing standards, especially those with highly heterogeneous actors can be considered ideal candidates for blockchain adoption. Note We can think of networks as being more heterogeneous if they're composed of actors of greatly varying sizes, different entity types (private companies, NGOs, governments, etc), and situated in different legal jurisdictions. The above characterization fits supply chains, especially those originating in the Global South, carbon markets, and the Cambrian explosion of ESG claims exceedingly well. As carbon neutrality and ESG claims grow in popularity, incentives increase for greenwashing and similar practices. Trust and verifiability for these claims will become paramount. At the same time, the global diversification of the economy means that more and more business is continually done in or involving parts of the world with legal and regulatory systems quite literally foreign to us, and where traditional means of dispute settlement may not be feasible. 32% of Fortune 500 companies have committed to carbon neutrality ( as of October 2020 ) 80% of consumers report being more likely to purchase from a company with strong ESG practices ( via PWC ) 85% of investors surveyed report considering ESG data in their investment decisions ( via Gartner ) Between 2016 and 2050, the share of global GDP accounted for by the US and the EU is expected to fall from 31% to 21% as economic growth shifts further toward emerging markets ( via PWC ).","title":"Another Layer 1"},{"location":"introduction/glossary/","text":"Glossary Taktikos The regularized Nakamoto-style proof-of-stake consensus algorithm that powers the Topl protocol. The Taktikos staking mechanism reduces variance in the distribution of time intervals between blocks by means of a time-varying leader election process. This quality of regularization significant improvements for transaction throughput and finality guarantees in a proof-of-stake protocol. Read more Application Tiers Fully decentralized applications can only be achieved by being completely transparent (like a DAO couldn't run as a Tier 2? That seems like it would be collusion), but there are several stages between traditional web 2.0 (or Tier 0) applications and fully decentralized and autonomous Tier 3 applications. Key to the progression between each tier is the identification of which party executes business logic and approves (signs) the final transaction. Tier 0: Traditional centralized application where verifiable claims are neither committed to nor posted to a public network. In this model, business logic is executed by the organization and wallets are not part of the application. Tier 1: Traditional centralized application where verifiable claims are committed to and posted to a public network. In this model, organizations both execute business logic and administer multiple wallets to manage their on-chain assets. Tier 2: Partially decentralized application where verifiable claims are committed to and posted to a public network. In this model, users become participants by maintaining their own wallets and interacting with organizations to sign transactions. Organizations are responsible for executed business logic and constructing unsigned blockchain transactions which are then sent to the user for their signature. Upon approving and signing the transaction, the user sends the signed transaction back to the organization for any further processing before broadcast to the public network. Tier 3: Fully decentralized application where verifiable claims are committed to and posted to a public network. In this model, users become fully autonomous and no longer rely on the organization to construct transactions on their behalf. Organizations make available their business logic on the public network and users execute this logic to construct their own transactions, sign them, and broadcast them to the public network.","title":"Topl Glossary"},{"location":"introduction/glossary/#glossary","text":"","title":"Glossary"},{"location":"introduction/glossary/#taktikos","text":"The regularized Nakamoto-style proof-of-stake consensus algorithm that powers the Topl protocol. The Taktikos staking mechanism reduces variance in the distribution of time intervals between blocks by means of a time-varying leader election process. This quality of regularization significant improvements for transaction throughput and finality guarantees in a proof-of-stake protocol. Read more","title":"Taktikos"},{"location":"introduction/glossary/#application-tiers","text":"Fully decentralized applications can only be achieved by being completely transparent (like a DAO couldn't run as a Tier 2? That seems like it would be collusion), but there are several stages between traditional web 2.0 (or Tier 0) applications and fully decentralized and autonomous Tier 3 applications. Key to the progression between each tier is the identification of which party executes business logic and approves (signs) the final transaction. Tier 0: Traditional centralized application where verifiable claims are neither committed to nor posted to a public network. In this model, business logic is executed by the organization and wallets are not part of the application. Tier 1: Traditional centralized application where verifiable claims are committed to and posted to a public network. In this model, organizations both execute business logic and administer multiple wallets to manage their on-chain assets. Tier 2: Partially decentralized application where verifiable claims are committed to and posted to a public network. In this model, users become participants by maintaining their own wallets and interacting with organizations to sign transactions. Organizations are responsible for executed business logic and constructing unsigned blockchain transactions which are then sent to the user for their signature. Upon approving and signing the transaction, the user sends the signed transaction back to the organization for any further processing before broadcast to the public network. Tier 3: Fully decentralized application where verifiable claims are committed to and posted to a public network. In this model, users become fully autonomous and no longer rely on the organization to construct transactions on their behalf. Organizations make available their business logic on the public network and users execute this logic to construct their own transactions, sign them, and broadcast them to the public network.","title":"Application Tiers"},{"location":"introduction/interoperability/","text":"Interoperability Despite or because of the rapid development of multiple independent networks, the question of blockchain interoperability remains open. Critical for blockchain to reach its potential, interoperability is a tractable problem for any blockchain that has two key characteristics. First, the blockchain must include a mechanism to verifiably lock and unlock assets that users wish to transfer to another chain. Second, the blockchain\u2019s design and development team must remain firmly open to following whichever communication protocol emerges as the dominant standard for interchain communication. To the first requirement, the Topl Blockchian, as part of its UTxO ledger, is designed to enable extended-UTxOs. eUTxOs can be thought of as self-replicating locks that can be applied to the \u201cboxes\u201d containing tokens that require a certain verifiable condition(s) to be met in order for these tokens to be unlocked. While we will expand in further sections on the advantages of eUTxOs, it will suffice for the present topic to say that it is through eUTxOs that the Topl Blockchain enables the verifiable locking and unlocking of outgoing or incoming assets. To the first requirement, the Topl Blockchain, as part of its UTxO ledger, is designed to enable extended-UTxOs. EUTxOs can be thought of as self-replicating locks that can be applied to the \u201cboxes\u201d containing tokens requiring verifiable condition(s) to be met in order for these tokens to be unlocked. While we will expand in further sections on the advantages of EUTxOs, it will suffice for now to say that it is through EUTxOs that the Topl Blockchain enables the verifiable locking and unlocking of outgoing or incoming assets. Beyond our extended-UTxO mechanism, Topl has implemented smart contract functionality via the Digital Asset Modeling Language (DAML) . Topl's implementation of DAML smart contracts is unique in that these smart contracts exist through domain-separated layer 2 virtual ledgers, where each smart contract maintains its own local state that can both initiate updates to the layer 1 Topl chain underneath as well as react to any changes on the layer 1 chain. Since these smart contracts exist in a quasi-independent state from the Topl layer 1, they can simultaneously be connected to multiple underlying blockchains (or even traditional databases) to form a bridge for the assets or tokens they represent between those ledgers.","title":"Interoperable By Design"},{"location":"introduction/interoperability/#interoperability","text":"Despite or because of the rapid development of multiple independent networks, the question of blockchain interoperability remains open. Critical for blockchain to reach its potential, interoperability is a tractable problem for any blockchain that has two key characteristics. First, the blockchain must include a mechanism to verifiably lock and unlock assets that users wish to transfer to another chain. Second, the blockchain\u2019s design and development team must remain firmly open to following whichever communication protocol emerges as the dominant standard for interchain communication. To the first requirement, the Topl Blockchian, as part of its UTxO ledger, is designed to enable extended-UTxOs. eUTxOs can be thought of as self-replicating locks that can be applied to the \u201cboxes\u201d containing tokens that require a certain verifiable condition(s) to be met in order for these tokens to be unlocked. While we will expand in further sections on the advantages of eUTxOs, it will suffice for the present topic to say that it is through eUTxOs that the Topl Blockchain enables the verifiable locking and unlocking of outgoing or incoming assets. To the first requirement, the Topl Blockchain, as part of its UTxO ledger, is designed to enable extended-UTxOs. EUTxOs can be thought of as self-replicating locks that can be applied to the \u201cboxes\u201d containing tokens requiring verifiable condition(s) to be met in order for these tokens to be unlocked. While we will expand in further sections on the advantages of EUTxOs, it will suffice for now to say that it is through EUTxOs that the Topl Blockchain enables the verifiable locking and unlocking of outgoing or incoming assets. Beyond our extended-UTxO mechanism, Topl has implemented smart contract functionality via the Digital Asset Modeling Language (DAML) . Topl's implementation of DAML smart contracts is unique in that these smart contracts exist through domain-separated layer 2 virtual ledgers, where each smart contract maintains its own local state that can both initiate updates to the layer 1 Topl chain underneath as well as react to any changes on the layer 1 chain. Since these smart contracts exist in a quasi-independent state from the Topl layer 1, they can simultaneously be connected to multiple underlying blockchains (or even traditional databases) to form a bridge for the assets or tokens they represent between those ledgers.","title":"Interoperability"},{"location":"introduction/motivation/","text":"Motivation and Vision Challenging problems require unique solutions. The greatest problems require even more: unique solutions that are purpose-built and relentlessly dedicated to their resolution. Our current economy has severe shortcomings and demands the latter. Today\u2019s economy is defined by an extreme lack of transparency and accountability for practices that may be damaging to the environment or communities precarious inequality built through the overcompensation of capital investment relative to productive contribution monetary fundamentals exacerbating rather than mitigating the above economic characteristics Topl imagines a new economy, one designed to make growth simultaneously inclusive and sustainable, one that aims to include social and environmental concerns previously cast out as \u201cexternalities.\u201d A unique and purpose-built public network, the Topl Blockchain, will serve as this envisioned foundation. This protocol has been informed, from core architecture to ancillary tooling, by a relentless focus on matters of inclusivity and both economic and environmental sustainability. Critically, we do not envision Topl as only being \u201cthe blockchain for ESG\u201d or the \u201cblockchain for impact\u201d, in the vein of countless startup pitch taglines of \u201cUber for X\u201d, relegating itself to a niche existence. Rather, Topl is designed to underpin a broad range of economic activities, including supply chains, trade finance, energy production, payments, commodities, and carbon markets, and do so in such a way that these economic activities are transformed to naturally produce greater positive impact and inclusion.","title":"Motivation and Vision"},{"location":"introduction/motivation/#motivation-and-vision","text":"Challenging problems require unique solutions. The greatest problems require even more: unique solutions that are purpose-built and relentlessly dedicated to their resolution. Our current economy has severe shortcomings and demands the latter. Today\u2019s economy is defined by an extreme lack of transparency and accountability for practices that may be damaging to the environment or communities precarious inequality built through the overcompensation of capital investment relative to productive contribution monetary fundamentals exacerbating rather than mitigating the above economic characteristics Topl imagines a new economy, one designed to make growth simultaneously inclusive and sustainable, one that aims to include social and environmental concerns previously cast out as \u201cexternalities.\u201d A unique and purpose-built public network, the Topl Blockchain, will serve as this envisioned foundation. This protocol has been informed, from core architecture to ancillary tooling, by a relentless focus on matters of inclusivity and both economic and environmental sustainability. Critically, we do not envision Topl as only being \u201cthe blockchain for ESG\u201d or the \u201cblockchain for impact\u201d, in the vein of countless startup pitch taglines of \u201cUber for X\u201d, relegating itself to a niche existence. Rather, Topl is designed to underpin a broad range of economic activities, including supply chains, trade finance, energy production, payments, commodities, and carbon markets, and do so in such a way that these economic activities are transformed to naturally produce greater positive impact and inclusion.","title":"Motivation and Vision"},{"location":"introduction/what-is-blockchain-good-for/","text":"What is blockchain good for? Current applications of blockchain technology (and the associated blockchain designs) feel as though they may be beyond count. From in-game currencies and NFTs using EVM-compatible public chains to post-trade settlement of financial derivatives (usually between just a handful of large banks) using private system's such as Corda, the spectrum is broad. With such a diversity of current use cases, it's fair to ask - \"What is the USP (unique selling proposition) of blockchain? Does one even exist?\" Topl believes the answer to this question is undoubtedly yes. To understand what this USP is, we turn to the theory of Disruptive Innovation first developed by Joseph Bower and Clayton Christensen and apply it to blockchains . The theory of Disruptive Innovation asks, \"Is there something that blockchain technology does that was previously impossible?\" We put aside for the moment anything that blockchains allow to be done better, easier, or cheaper, and focus on the transformation from impossible to possible . Blockchains uniquely and exclusively enable the broadest possible set of actors to interact and transact without any need for pre-existing relationships, trust, or a central (clearing) party. Never before have users, from the largest corporations to the most disenfranchised individuals been able to form economic relationships without existing trust either in each other or in institutions, relying instead on cryptography and game theory that is universal and fully inclusive. Blockchain provides a censor-proof immutable ledger that all parties can interact with directly and without any intermediaries. Simply put, the USP of blockchain is trust and direct participation. None of this is to say that blockchain tech can't also deliver on other claimed value propositions such as reduced costs and increased settlement speeds. Rather it is just that these are secondary benefits, resulting from the USP of blockchain. For example, blockchains reduce the time for settlement or trading not because blockchains are faster but because the increased trust and more direct involvement of the full network of parties results in a settlement process that requires less intermediation and can be finalized with less dispute.","title":"Blockchain Use Cases"},{"location":"introduction/what-is-blockchain-good-for/#what-is-blockchain-good-for","text":"Current applications of blockchain technology (and the associated blockchain designs) feel as though they may be beyond count. From in-game currencies and NFTs using EVM-compatible public chains to post-trade settlement of financial derivatives (usually between just a handful of large banks) using private system's such as Corda, the spectrum is broad. With such a diversity of current use cases, it's fair to ask - \"What is the USP (unique selling proposition) of blockchain? Does one even exist?\" Topl believes the answer to this question is undoubtedly yes. To understand what this USP is, we turn to the theory of Disruptive Innovation first developed by Joseph Bower and Clayton Christensen and apply it to blockchains . The theory of Disruptive Innovation asks, \"Is there something that blockchain technology does that was previously impossible?\" We put aside for the moment anything that blockchains allow to be done better, easier, or cheaper, and focus on the transformation from impossible to possible . Blockchains uniquely and exclusively enable the broadest possible set of actors to interact and transact without any need for pre-existing relationships, trust, or a central (clearing) party. Never before have users, from the largest corporations to the most disenfranchised individuals been able to form economic relationships without existing trust either in each other or in institutions, relying instead on cryptography and game theory that is universal and fully inclusive. Blockchain provides a censor-proof immutable ledger that all parties can interact with directly and without any intermediaries. Simply put, the USP of blockchain is trust and direct participation. None of this is to say that blockchain tech can't also deliver on other claimed value propositions such as reduced costs and increased settlement speeds. Rather it is just that these are secondary benefits, resulting from the USP of blockchain. For example, blockchains reduce the time for settlement or trading not because blockchains are faster but because the increased trust and more direct involvement of the full network of parties results in a settlement process that requires less intermediation and can be finalized with less dispute.","title":"What is blockchain good for?"},{"location":"tokenomics-and-governance/arbits/","text":"Arbits The Arbit acts as protocol token of Topl\u2019s proof-of-stake blockchain. Arbit ownership entitles parties to participate in block creation and ecosystem governance. Critically, however, Arbits are not used for the payment of transactions fees (i.e. as a currency), drawing a distinction between Arbits and similar PoS protocol tokens such as Ada (Cardano), Dots (Polkadot), and SOL (Solana). We elaborate on this decision to separate staking from payment functionality in a dedicated section on the Poly, Topl\u2019s currency token, but fundamentally this design was driven by recognition of the complex and conflicting dynamics (tokenomics) required in an effective token of either variety. Inflation Through the 13-year history of the blockchain space, questions of inflation have loomed large for every new blockchain project. While these questions initially focused solely on a monetary perspective, as all early protocol tokens were intended to be pure currencies, these questions were altered by the proliferation of ICOs and other launches of blockchain-enabled projects and new proof-of-stake blockchains. As projects began seeking seed or launch capital, inflation questions shifted to be driven by investor concerns over future dilution, with total token caps being sought to protect ownership shares rather than recreate something like the gold standard. While we fully recognize the desire for blockchain investors to protect themselves from inflationary dilution, we believe that the sustained viability of the endeavor must be considered primary. A large stake in a worthless asset is still worthless. To this end, Topl has designed an issuance plan for Arbits intended to support both robust community involvement and strong continued development and improvement efforts. Revenue Correlated Minting The first component of Topl\u2019s token issuance protocol establishes the network\u2019s inflation schedule. Instead of electing for either issuing new Arbits at a fixed percentage annually (following Milton Friedman\u2019s K-Percent Rule) or with a fixed number of Arbits per year (after Ethereum\u2019s original disinflationary model), Arbit inflation will be dynamic, based on positive changes in collected transaction fees ( protocol revenue ). If protocol revenue increases by \\(\\Delta\\) , the supply of Arbits will also be increased by \\(\\Delta\\) . However, if protocol revenue decreases, the Arbit supply will remain unchanged. Note While several variables were consider as potential drivers for Arbit supply changes, including Arbit price, protocol revenue was chosen in part because this information in endogenous to the system, meaning there is no oracle required. Algorithmically, this will be carried out as follows starting at epoch n (more on epochs here ): When \\(>\\frac{2}{3}\\) of slots in epoch \\(n\\) have elapsed, the protocol will calculate \\(\\Delta\\) in protocol revenue between epochs \\(n-1\\) and \\(n-2\\) ; If \\(\\Delta>0\\) , the protocol will calculate the number of new Arbits to be issued in epoch \\(n+2\\) that will create an inflation rate equal to the current \\(\\Delta\\) . During epoch \\(n+2\\) , new Arbits totaling \\(\\Delta\\times \\textit{totalSupplyArbits}\\) will be distributed proportionally to block producers. The motivation for this choice is network security. In a proof-of-stake blockchain, the ledger\u2019s security is linearly correlated with the percentage of participating stake (that portion involved in block production). What the price-correlated minting achieves is a design in which those token holders not actively participating (either directly or through delegation) in securing the network do not participate in any price appreciation of the asset that they hold. This strengthens the incentive to participate in block production, boosting the network\u2019s security, which, in turn, according to analysis provided by the Fat Protocol Thesis, increases the total value of other assets (currencies, commodities, etc.) that can be hosted on the Topl Blockchain. Funding development through baseline inflation Having established our base inflation mechanism for Arbits, we now consider how such inflation can be used to incentivize continued protocol and tooling development in addition to supporting network security. This feat can be accomplished by electing to divert a portion of new Arbit creation into an ecosystem development fund. However, diverting from a fixed available supply will create misalignment between those securing the network and those working to improve it. Instead, we can keep these two interests aligned by revising our inflation equation to the following equation: \\[ (\\Delta + B) * \\textit{totalArbitSupply} \\] where \\(B\\) is the rate of new Arbit minting (chosen by Arbit holders on a periodic basis) that will fill the protocol\u2019s ecosystem development fund. While determined through Arbit governance, this rate of inflation will nevertheless be constrained to be within certain ranges depending on the total market capitalization of Arbits. Market Capitalization Annual Inflation Rate \\(B\\) <$500MM 8% - 16% $500MM to $2bn 4% - 8% $2bn to $10bn 2% - 4% >$10bn <2% A bias toward productive contribution Given the non-neutrality in design and potential for high rates of nominal inflation that may be experienced especially in the early years of Topl\u2019s ecosystem development, our differentiated token issuance mechanism requires motivation beyond even that which has been provided. While a first defense may claim that the need to continually fund protocol and ancillary development, there are other \u201cpermanent incentive models\u201d such as Joel Monegro\u2019s buyback and make proposal. The majority of these existing perpetual funding models are neutral between capital and productive contribution, whereas we seek to bias Topl\u2019s economy toward productive contribution. In addition to the desire to prevent Arbit ownership from becoming a rent-seeking activity driving the system toward self-reinforcing centralization, we believe our design\u2019s imposed bias toward those actively securing the network and contributing to its continued development can drive a substantial long-term advantage, a fact hopefully made apparent through the following argument. In a proof-of-stake blockchain, the value of the staking token is most fundamentally the net present value discounted cash flows of all transaction fees that the network will collect. Maximizing user adoption requires continuous improvement to the blockchain\u2019s technological core and ancillary tooling, as well as consistent investment in community building. For a fixed market capitalization, a proof-of-stake blockchain with a higher participation rate for block production can support a greater amount of user-generated assets. From 2 & 3, a design that incentivizes both continued development and greater participation in block production will drive greater adoption and usage. From 1 & 4, a proof-of-stake blockchain with higher levels of usage will collect more transaction fees and thus have a more valuable staking token. It is possible that even in the absence of such direct and preferential incentives, a blockchain\u2019s token holders will themselves act in the protocol\u2019s best interest both in providing robust security and funding continual development. However, such a setup has all the markings of creating a tragedy of the commons, a potentially fatal design flaw to which so-called rational markets have proven reliably vulnerable.","title":"Arbits"},{"location":"tokenomics-and-governance/arbits/#arbits","text":"The Arbit acts as protocol token of Topl\u2019s proof-of-stake blockchain. Arbit ownership entitles parties to participate in block creation and ecosystem governance. Critically, however, Arbits are not used for the payment of transactions fees (i.e. as a currency), drawing a distinction between Arbits and similar PoS protocol tokens such as Ada (Cardano), Dots (Polkadot), and SOL (Solana). We elaborate on this decision to separate staking from payment functionality in a dedicated section on the Poly, Topl\u2019s currency token, but fundamentally this design was driven by recognition of the complex and conflicting dynamics (tokenomics) required in an effective token of either variety.","title":"Arbits"},{"location":"tokenomics-and-governance/arbits/#inflation","text":"Through the 13-year history of the blockchain space, questions of inflation have loomed large for every new blockchain project. While these questions initially focused solely on a monetary perspective, as all early protocol tokens were intended to be pure currencies, these questions were altered by the proliferation of ICOs and other launches of blockchain-enabled projects and new proof-of-stake blockchains. As projects began seeking seed or launch capital, inflation questions shifted to be driven by investor concerns over future dilution, with total token caps being sought to protect ownership shares rather than recreate something like the gold standard. While we fully recognize the desire for blockchain investors to protect themselves from inflationary dilution, we believe that the sustained viability of the endeavor must be considered primary. A large stake in a worthless asset is still worthless. To this end, Topl has designed an issuance plan for Arbits intended to support both robust community involvement and strong continued development and improvement efforts.","title":"Inflation"},{"location":"tokenomics-and-governance/arbits/#revenue-correlated-minting","text":"The first component of Topl\u2019s token issuance protocol establishes the network\u2019s inflation schedule. Instead of electing for either issuing new Arbits at a fixed percentage annually (following Milton Friedman\u2019s K-Percent Rule) or with a fixed number of Arbits per year (after Ethereum\u2019s original disinflationary model), Arbit inflation will be dynamic, based on positive changes in collected transaction fees ( protocol revenue ). If protocol revenue increases by \\(\\Delta\\) , the supply of Arbits will also be increased by \\(\\Delta\\) . However, if protocol revenue decreases, the Arbit supply will remain unchanged. Note While several variables were consider as potential drivers for Arbit supply changes, including Arbit price, protocol revenue was chosen in part because this information in endogenous to the system, meaning there is no oracle required. Algorithmically, this will be carried out as follows starting at epoch n (more on epochs here ): When \\(>\\frac{2}{3}\\) of slots in epoch \\(n\\) have elapsed, the protocol will calculate \\(\\Delta\\) in protocol revenue between epochs \\(n-1\\) and \\(n-2\\) ; If \\(\\Delta>0\\) , the protocol will calculate the number of new Arbits to be issued in epoch \\(n+2\\) that will create an inflation rate equal to the current \\(\\Delta\\) . During epoch \\(n+2\\) , new Arbits totaling \\(\\Delta\\times \\textit{totalSupplyArbits}\\) will be distributed proportionally to block producers. The motivation for this choice is network security. In a proof-of-stake blockchain, the ledger\u2019s security is linearly correlated with the percentage of participating stake (that portion involved in block production). What the price-correlated minting achieves is a design in which those token holders not actively participating (either directly or through delegation) in securing the network do not participate in any price appreciation of the asset that they hold. This strengthens the incentive to participate in block production, boosting the network\u2019s security, which, in turn, according to analysis provided by the Fat Protocol Thesis, increases the total value of other assets (currencies, commodities, etc.) that can be hosted on the Topl Blockchain.","title":"Revenue Correlated Minting"},{"location":"tokenomics-and-governance/arbits/#funding-development-through-baseline-inflation","text":"Having established our base inflation mechanism for Arbits, we now consider how such inflation can be used to incentivize continued protocol and tooling development in addition to supporting network security. This feat can be accomplished by electing to divert a portion of new Arbit creation into an ecosystem development fund. However, diverting from a fixed available supply will create misalignment between those securing the network and those working to improve it. Instead, we can keep these two interests aligned by revising our inflation equation to the following equation: \\[ (\\Delta + B) * \\textit{totalArbitSupply} \\] where \\(B\\) is the rate of new Arbit minting (chosen by Arbit holders on a periodic basis) that will fill the protocol\u2019s ecosystem development fund. While determined through Arbit governance, this rate of inflation will nevertheless be constrained to be within certain ranges depending on the total market capitalization of Arbits. Market Capitalization Annual Inflation Rate \\(B\\) <$500MM 8% - 16% $500MM to $2bn 4% - 8% $2bn to $10bn 2% - 4% >$10bn <2%","title":"Funding development through baseline inflation"},{"location":"tokenomics-and-governance/arbits/#a-bias-toward-productive-contribution","text":"Given the non-neutrality in design and potential for high rates of nominal inflation that may be experienced especially in the early years of Topl\u2019s ecosystem development, our differentiated token issuance mechanism requires motivation beyond even that which has been provided. While a first defense may claim that the need to continually fund protocol and ancillary development, there are other \u201cpermanent incentive models\u201d such as Joel Monegro\u2019s buyback and make proposal. The majority of these existing perpetual funding models are neutral between capital and productive contribution, whereas we seek to bias Topl\u2019s economy toward productive contribution. In addition to the desire to prevent Arbit ownership from becoming a rent-seeking activity driving the system toward self-reinforcing centralization, we believe our design\u2019s imposed bias toward those actively securing the network and contributing to its continued development can drive a substantial long-term advantage, a fact hopefully made apparent through the following argument. In a proof-of-stake blockchain, the value of the staking token is most fundamentally the net present value discounted cash flows of all transaction fees that the network will collect. Maximizing user adoption requires continuous improvement to the blockchain\u2019s technological core and ancillary tooling, as well as consistent investment in community building. For a fixed market capitalization, a proof-of-stake blockchain with a higher participation rate for block production can support a greater amount of user-generated assets. From 2 & 3, a design that incentivizes both continued development and greater participation in block production will drive greater adoption and usage. From 1 & 4, a proof-of-stake blockchain with higher levels of usage will collect more transaction fees and thus have a more valuable staking token. It is possible that even in the absence of such direct and preferential incentives, a blockchain\u2019s token holders will themselves act in the protocol\u2019s best interest both in providing robust security and funding continual development. However, such a setup has all the markings of creating a tragedy of the commons, a potentially fatal design flaw to which so-called rational markets have proven reliably vulnerable.","title":"A bias toward productive contribution"},{"location":"tokenomics-and-governance/community-inclusive-organization/","text":"Community Inclusive Organization Central to Topl\u2019s vision of creating a robust impact economy that prioritizes productive contribution is a firm foundation for governance. Without well-designed governance, the long-term vision and purpose of the project cannot be guaranteed. Most crypto projects seeking to implement such a governance foundation adopt some combination of on-chain and off-chain voting. They then plan for all voting procedures and any associated fund dispersal to eventually be handled by a DAO. To understand why we will introduce a new governance model, we must first address the shortcomings of traditional DAO-style setups for layer 1 protocols. DAOs, or Decentralized Autonomous Organizations, come in three primary varieties (with the potential for hybridization): Smart-contract fund custodian: \u201cThe DAO\u201d is perhaps the purest example of this DAO variety. In this variety, stakeholders pool capital into a smart contract in exchange for voting tokens. Voting tokens entitle them to vote (directly) on what to do with pooled funds and to participate in the potential returns of such investments on a pro rata basis. Variable tuning mechanism: Most commonly found in DeFi protocols such as Maker or Aave, a DAO-style setup can allow for the tuning of various parameters that are central to how these protocols operate, such as liquidation ratios and stability fees. Consensus rule validator: While DAOs are least commonly found in layer 1 projects, a notable and long-running exception to this is Decred. The Decred blockchain uses a well-developed on-chain process of voting to approve changes to the consensus-level rules of the protocol. Although any Topl DAO would draw from all three DAO varieties, it is not this combined functionality that has shortcomings. Rather, it is the simplicity with which they must necessarily operate. If we explore the above DAO varieties further, we see that they are consistently paired with substantially less developed off-chain procedures, such as admin-moderated discussion forums, to handle everything except final execution. The challenge here for the governance of layer 1 blockchains like Topl stems from the long development cycles and the repeated rounds of approval for any substantial development effort. As is apparent from examples like Eth2 or Cosmos Stargate, the critical compromises, decisions, and work of an upgrade is done long before network validators activate a new protocol version at a predetermined block number. Both in theory and in practice, the design of DAOs as presently conceived relegates any community governance to a mere rubber stamp for decisions that have already been made and often carry too much momentum to halt without harming the project. The Topl CIO (Community Inclusive Organization) As an alternative to the DAO, we propose a new model of governance that we believe better addresses the realities faced by blockchain projects and more accurately solves the principal-agent problem. Upon decentralization (timeline here), the Topl Blockchain will be governed and led through a Community Inclusive Organization or CIO. The first and most critical difference between a CIO and a DAO is that the former is intended to recognize the reality of long-term involvement by a legal entity in project custodianship and execution. By accepting this reality, the CIO can implement rigorous and well-founded protocols for its own governance and relationship with the project ecosystem rather than allowing such protocols and relationships to be relegated to a footnote and unrealistically dismissed. The Topl CIO will be formed as a foundation in one of several jurisdictions. While the jurisdiction chosen may affect formation and reporting requirements, the chosen jurisdiction will allow the following: Additionally, the chosen jurisdiction must offer a friendly legal environment for crypto projects while also providing tight regulatory integration with a major economic block. For these reasons, a number of jurisdictions are currently under consideration, including the Netherlands, Switzerland, Malta, and Portugal. CIO Governance The CIO will be governed through a two-tier structure with a directly elected Governing Delegation along with a secondary Executive Council elected by and composed of members of the Governing Delegation. The purpose of this two-tier structure is to capture the viewpoint diversity that the Topl ecosystem hopes to foster while still allowing the CIO to provide effective and efficient guidance to the project. The Governing Delegation will be variable in size depending on the number of monthly active addresses on the Topl Blockchain, with a minimum size of 10. Growth is governed by the following equation: \\[ governingDelegation= \\max(10, \\lceil monthlyActiveAddresses^{0.25} \\rceil) \\] Meanwhile, the Executive Council will initially consist of five members: an Executive Director, plus one Director for each established Committee. At inception, the four inaugural Committees will include Protocol Design, Research, Ecosystem Growth, and Monetary Policy. Committees can be added or removed at the election of Arbit holders. Election Process Voting for the Governing Delegation will be conducted off-chain but with cryptographic guarantees made available by verifiable token ownership. Elections will be regularly scheduled at two-year intervals, with the added possibility for snap elections to be called if necessary. A snap election may be called by submission of a request supported by a yet-to-be-determined percentage of Arbit ownership. In the event of a snap election, the subsequent regular election will occur two years from the date of the snap election (provided there is no subsequent intervening snap election). Following either a regular or snap election, the Governing Delegation will have 60 days to appoint a full Executive Council. If such an appointment is not successfully made, an election for a new Governing Delegation will be held. Voting While maximum voting power will be determined by Arbit ownership, Arbits must be \u201cspent\u201d to cast a vote. Spent Arbits will enter a CIO reserve fund that can be used to incentivize network development, growth, and participation. While potentially counter-intuitive, the purpose of such a \u201cpay-to-vote\u201d scheme works to address one of the central criticisms of PoS governance, namely that they enable self-reinforcing plutocracies. With conventional POS governance, holding of the network token grants a user control in all votes in perpetuity (at least as long as they maintain such a holding). In Topl\u2019s voting model, ownership grants such influence in only a single vote. (Potential) Need for Legal Entity Topl's Quivr DSL and DAML smart contract layer will enable the Topl CIO to manage its Development Ecosystem Fund (consisting of Polys) and its Reserve Fund (consisting of Arbits) as well as manage upgrades and forks. Despite this, the possibility remains, and may in fact be a strong likelihood, that the Topl CIO would benefit from the creation of a legal entity that can act as a tightly controlled legal agent. Such a legal entity may be necessary to contract third-party service providers and enter into legal agreements with other parties. This legal entity, an agent of the Topl CIO, will be formed as a foundation in one of several contemplated jurisdictions. While the jurisdiction chosen may affect some formation and reporting requirements of the foundation, the chosen jurisdiction will necessarily allow the following: The entity will not have any capital stock or other form of capital ownership. There will be no \u201cowners\u201d of the entity, only a governing board. The governing board of the legal entity must be able to be defined as identical to the current Executive Council of the CIO, which is in turn elected by the Arbit holders. While initially counterintuitive, the purpose of such a \u201cpay-to-vote\u201d scheme works to address one of the central criticisms of PoS governance \u2014 that they are plutocracies. With conventional POS governance, holding the network token grants a user control in all votes in perpetuity (at least as long as they keep their holding). In Topl\u2019s voting model, ownership grants such influence in only a single vote. In addition to allowing the preceding two features for the foundation, the chosen jurisdiction must offer a consistent and friendly legal environment for crypto projects while also providing tight regulatory integration with a major economic block. For these reasons, a number of jurisdictions are currently under consideration including, the Netherlands, Switzerland, Malta, and Portugal. CIO Activities and Token Holder Control Many blockchain projects seek to eliminate (or minimize) the role of any organizational entity beyond the full set of token holders. The goal here is to resolve the potentially conflicting interests that result from the principal-agent dichotomy simply by eliminating the agent. While appealing, such an argument neglects that the realities of governance for complex projects will in one way or another produce agents. The only question is how well these agents are governed and aligned. You can find more on the \u201cagent-vacuum\u201d here (blog coming soon). The Topl CIO will propose and discuss priorities for ecosystem growth and protocol development, as well as work to formulate standards and potential revisions to the project\u2019s architecture, tokenomics, and monetary policy. The CIO will be controlled by Arbit holders through annual budget submissions and approvals. As the CIO's reserves will be composed only of Polys (Topl's value-stable currency) and Arbits, the CIO has no ability to fund its activities without the explicit approval of the Arbit holders. A second key activity of the CIO will be to act as a supervisory body on any and all contractors or developers who have received project funds. As research and software development efforts can require extended periods of work, benefiting from multiple steps of review and reporting, such oversight will be greatly beneficial to the quality and consistency of work funded by the project.","title":"Community-First Organization"},{"location":"tokenomics-and-governance/community-inclusive-organization/#community-inclusive-organization","text":"Central to Topl\u2019s vision of creating a robust impact economy that prioritizes productive contribution is a firm foundation for governance. Without well-designed governance, the long-term vision and purpose of the project cannot be guaranteed. Most crypto projects seeking to implement such a governance foundation adopt some combination of on-chain and off-chain voting. They then plan for all voting procedures and any associated fund dispersal to eventually be handled by a DAO. To understand why we will introduce a new governance model, we must first address the shortcomings of traditional DAO-style setups for layer 1 protocols. DAOs, or Decentralized Autonomous Organizations, come in three primary varieties (with the potential for hybridization): Smart-contract fund custodian: \u201cThe DAO\u201d is perhaps the purest example of this DAO variety. In this variety, stakeholders pool capital into a smart contract in exchange for voting tokens. Voting tokens entitle them to vote (directly) on what to do with pooled funds and to participate in the potential returns of such investments on a pro rata basis. Variable tuning mechanism: Most commonly found in DeFi protocols such as Maker or Aave, a DAO-style setup can allow for the tuning of various parameters that are central to how these protocols operate, such as liquidation ratios and stability fees. Consensus rule validator: While DAOs are least commonly found in layer 1 projects, a notable and long-running exception to this is Decred. The Decred blockchain uses a well-developed on-chain process of voting to approve changes to the consensus-level rules of the protocol. Although any Topl DAO would draw from all three DAO varieties, it is not this combined functionality that has shortcomings. Rather, it is the simplicity with which they must necessarily operate. If we explore the above DAO varieties further, we see that they are consistently paired with substantially less developed off-chain procedures, such as admin-moderated discussion forums, to handle everything except final execution. The challenge here for the governance of layer 1 blockchains like Topl stems from the long development cycles and the repeated rounds of approval for any substantial development effort. As is apparent from examples like Eth2 or Cosmos Stargate, the critical compromises, decisions, and work of an upgrade is done long before network validators activate a new protocol version at a predetermined block number. Both in theory and in practice, the design of DAOs as presently conceived relegates any community governance to a mere rubber stamp for decisions that have already been made and often carry too much momentum to halt without harming the project.","title":"Community Inclusive Organization"},{"location":"tokenomics-and-governance/community-inclusive-organization/#the-topl-cio-community-inclusive-organization","text":"As an alternative to the DAO, we propose a new model of governance that we believe better addresses the realities faced by blockchain projects and more accurately solves the principal-agent problem. Upon decentralization (timeline here), the Topl Blockchain will be governed and led through a Community Inclusive Organization or CIO. The first and most critical difference between a CIO and a DAO is that the former is intended to recognize the reality of long-term involvement by a legal entity in project custodianship and execution. By accepting this reality, the CIO can implement rigorous and well-founded protocols for its own governance and relationship with the project ecosystem rather than allowing such protocols and relationships to be relegated to a footnote and unrealistically dismissed. The Topl CIO will be formed as a foundation in one of several jurisdictions. While the jurisdiction chosen may affect formation and reporting requirements, the chosen jurisdiction will allow the following: Additionally, the chosen jurisdiction must offer a friendly legal environment for crypto projects while also providing tight regulatory integration with a major economic block. For these reasons, a number of jurisdictions are currently under consideration, including the Netherlands, Switzerland, Malta, and Portugal.","title":"The Topl CIO (Community Inclusive Organization)"},{"location":"tokenomics-and-governance/community-inclusive-organization/#cio-governance","text":"The CIO will be governed through a two-tier structure with a directly elected Governing Delegation along with a secondary Executive Council elected by and composed of members of the Governing Delegation. The purpose of this two-tier structure is to capture the viewpoint diversity that the Topl ecosystem hopes to foster while still allowing the CIO to provide effective and efficient guidance to the project. The Governing Delegation will be variable in size depending on the number of monthly active addresses on the Topl Blockchain, with a minimum size of 10. Growth is governed by the following equation: \\[ governingDelegation= \\max(10, \\lceil monthlyActiveAddresses^{0.25} \\rceil) \\] Meanwhile, the Executive Council will initially consist of five members: an Executive Director, plus one Director for each established Committee. At inception, the four inaugural Committees will include Protocol Design, Research, Ecosystem Growth, and Monetary Policy. Committees can be added or removed at the election of Arbit holders.","title":"CIO Governance"},{"location":"tokenomics-and-governance/community-inclusive-organization/#election-process","text":"Voting for the Governing Delegation will be conducted off-chain but with cryptographic guarantees made available by verifiable token ownership. Elections will be regularly scheduled at two-year intervals, with the added possibility for snap elections to be called if necessary. A snap election may be called by submission of a request supported by a yet-to-be-determined percentage of Arbit ownership. In the event of a snap election, the subsequent regular election will occur two years from the date of the snap election (provided there is no subsequent intervening snap election). Following either a regular or snap election, the Governing Delegation will have 60 days to appoint a full Executive Council. If such an appointment is not successfully made, an election for a new Governing Delegation will be held.","title":"Election Process"},{"location":"tokenomics-and-governance/community-inclusive-organization/#voting","text":"While maximum voting power will be determined by Arbit ownership, Arbits must be \u201cspent\u201d to cast a vote. Spent Arbits will enter a CIO reserve fund that can be used to incentivize network development, growth, and participation. While potentially counter-intuitive, the purpose of such a \u201cpay-to-vote\u201d scheme works to address one of the central criticisms of PoS governance, namely that they enable self-reinforcing plutocracies. With conventional POS governance, holding of the network token grants a user control in all votes in perpetuity (at least as long as they maintain such a holding). In Topl\u2019s voting model, ownership grants such influence in only a single vote.","title":"Voting"},{"location":"tokenomics-and-governance/community-inclusive-organization/#potential-need-for-legal-entity","text":"Topl's Quivr DSL and DAML smart contract layer will enable the Topl CIO to manage its Development Ecosystem Fund (consisting of Polys) and its Reserve Fund (consisting of Arbits) as well as manage upgrades and forks. Despite this, the possibility remains, and may in fact be a strong likelihood, that the Topl CIO would benefit from the creation of a legal entity that can act as a tightly controlled legal agent. Such a legal entity may be necessary to contract third-party service providers and enter into legal agreements with other parties. This legal entity, an agent of the Topl CIO, will be formed as a foundation in one of several contemplated jurisdictions. While the jurisdiction chosen may affect some formation and reporting requirements of the foundation, the chosen jurisdiction will necessarily allow the following: The entity will not have any capital stock or other form of capital ownership. There will be no \u201cowners\u201d of the entity, only a governing board. The governing board of the legal entity must be able to be defined as identical to the current Executive Council of the CIO, which is in turn elected by the Arbit holders. While initially counterintuitive, the purpose of such a \u201cpay-to-vote\u201d scheme works to address one of the central criticisms of PoS governance \u2014 that they are plutocracies. With conventional POS governance, holding the network token grants a user control in all votes in perpetuity (at least as long as they keep their holding). In Topl\u2019s voting model, ownership grants such influence in only a single vote. In addition to allowing the preceding two features for the foundation, the chosen jurisdiction must offer a consistent and friendly legal environment for crypto projects while also providing tight regulatory integration with a major economic block. For these reasons, a number of jurisdictions are currently under consideration including, the Netherlands, Switzerland, Malta, and Portugal.","title":"(Potential) Need for Legal Entity"},{"location":"tokenomics-and-governance/community-inclusive-organization/#cio-activities-and-token-holder-control","text":"Many blockchain projects seek to eliminate (or minimize) the role of any organizational entity beyond the full set of token holders. The goal here is to resolve the potentially conflicting interests that result from the principal-agent dichotomy simply by eliminating the agent. While appealing, such an argument neglects that the realities of governance for complex projects will in one way or another produce agents. The only question is how well these agents are governed and aligned. You can find more on the \u201cagent-vacuum\u201d here (blog coming soon). The Topl CIO will propose and discuss priorities for ecosystem growth and protocol development, as well as work to formulate standards and potential revisions to the project\u2019s architecture, tokenomics, and monetary policy. The CIO will be controlled by Arbit holders through annual budget submissions and approvals. As the CIO's reserves will be composed only of Polys (Topl's value-stable currency) and Arbits, the CIO has no ability to fund its activities without the explicit approval of the Arbit holders. A second key activity of the CIO will be to act as a supervisory body on any and all contractors or developers who have received project funds. As research and software development efforts can require extended periods of work, benefiting from multiple steps of review and reporting, such oversight will be greatly beneficial to the quality and consistency of work funded by the project.","title":"CIO Activities and Token Holder Control"},{"location":"tokenomics-and-governance/services-and-dapp-development/","text":"Services and dApp Development As web3 is still in its early days, Topl realizes that many of its users do not have the means to interact with its blockchain network directly or develop their own dApps to do so. In order to unlock this demand and help accelerate adoption and ecosystem growth, Topl is actively developing several open-source services and dApps of its own accord. Over the coming months, Topl will organize the teams building and promoting these services and dApps into an independent entity that will play a central role in the growth of the Topl ecosystem. This organization, presently referred to as Topl Solutions, is currently focused on developing services and dApps across 3 different areas: Blockchain-as-a-Service (BaaS). Built for those wishing to integrate with the Topl Blockchain without the need to deploy and maintain their own nodes or infrastructure (launched Q2 2021) ; BaaS is further divided into two components: Torus , providing users with the ability to write to and query the Topl blockchain using RPC API exposed by Topl nodes; and Genus , enabling structured queries and streams of blockchain data; Lattice, Traceability-as-a-Service. Topl's blockchain is ideally suited to deliver supply chain traceability and transparency. Lattice is designed to help businesses to track the provenance of their goods as well as provide verifiability for sustainability and labor claims (launching Q3 2022) ; Registry-as-a-Service (RaaS). In line with Topl's vision to drive the monetization of impact and ESG, Topl Solutions is developing a registry-as-a-service platform to enable organizations to more easily, transparently, and interoperably mint carbon credits (as well as other forms of impact claims) via the Topl Blockchain (launching Q4 2022).","title":"Services and dApp Development"},{"location":"tokenomics-and-governance/services-and-dapp-development/#services-and-dapp-development","text":"As web3 is still in its early days, Topl realizes that many of its users do not have the means to interact with its blockchain network directly or develop their own dApps to do so. In order to unlock this demand and help accelerate adoption and ecosystem growth, Topl is actively developing several open-source services and dApps of its own accord. Over the coming months, Topl will organize the teams building and promoting these services and dApps into an independent entity that will play a central role in the growth of the Topl ecosystem. This organization, presently referred to as Topl Solutions, is currently focused on developing services and dApps across 3 different areas: Blockchain-as-a-Service (BaaS). Built for those wishing to integrate with the Topl Blockchain without the need to deploy and maintain their own nodes or infrastructure (launched Q2 2021) ; BaaS is further divided into two components: Torus , providing users with the ability to write to and query the Topl blockchain using RPC API exposed by Topl nodes; and Genus , enabling structured queries and streams of blockchain data; Lattice, Traceability-as-a-Service. Topl's blockchain is ideally suited to deliver supply chain traceability and transparency. Lattice is designed to help businesses to track the provenance of their goods as well as provide verifiability for sustainability and labor claims (launching Q3 2022) ; Registry-as-a-Service (RaaS). In line with Topl's vision to drive the monetization of impact and ESG, Topl Solutions is developing a registry-as-a-service platform to enable organizations to more easily, transparently, and interoperably mint carbon credits (as well as other forms of impact claims) via the Topl Blockchain (launching Q4 2022).","title":"Services and dApp Development"}]}